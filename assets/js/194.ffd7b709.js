(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{750:function(t,s,a){"use strict";a.r(s);var n=a(29),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_2-选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-选择器"}},[t._v("#")]),t._v(" 2 选择器")]),t._v(" "),a("h2",{attrs:{id:"jquery对象-和-dom-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jquery对象-和-dom-对象"}},[t._v("#")]),t._v(" jQuery对象 和 DOM 对象")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("DOM 对象\n是由宿主环境提供的对象，在文档对象模型中， 每个部分都是节点。\n如： 所有 HTML  元素是元素节点， 而 Element 对象表示 HTML 元素。\nHTML DOM Element 队形可以拥有类型为元素节点， 文本节点，注释节点的子节点")])]),t._v(" "),a("li",[a("p",[t._v("jQuery 对象\njQuery 构造函数创建出来的对象")])])]),t._v(" "),a("p",[t._v("通过 jQuery 选择器可以获取 HTML 的元素， 并且以一种类数组的形式存储在 jQuery 对象中")]),t._v(" "),a("h2",{attrs:{id:"对象转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象转换"}},[t._v("#")]),t._v(" 对象转换")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Elment 对象 转换成 jQuery 对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" domObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" $obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("domObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//jQuery 对象")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// jQuery 对象 转换成 Element 对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" $box "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.box'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" box "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" $box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"常用的-jquery-选择器接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用的-jquery-选择器接口"}},[t._v("#")]),t._v(" 常用的 jQuery 选择器接口")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("传入节点\n$(this) $(document) 把传入的对象包装成 jQuery 对象")])]),t._v(" "),a("li",[a("p",[t._v("传入函数\n$(function () {}) 这个是在页面 DOM 文档加载完成后加载执行的，等效于 DOM 加载完毕后执行了 $(document).ready() 方法。")])]),t._v(" "),a("li",[a("p",[t._v("传入字符串\n$('.box') 查询 DOM 节点 包装成 jQuery 对象")])]),t._v(" "),a("li",[a("p",[t._v("传入 HTML 字符串\n$('/")]),a("div"),t._v("') 创建 DOM  节点包装成 jQuery 对象"),a("p")]),t._v(" "),a("li",[a("p",[t._v("空\n$() 创建 jQuery 实例")])])]),t._v(" "),a("blockquote",[a("p",[t._v("jQuery 中 使用的 Sizzle 在 这里将被 querySelector 代替")])])])}),[],!1,null,null,null);s.default=e.exports}}]);