(window.webpackJsonp=window.webpackJsonp||[]).push([[230],{800:function(t,s,a){"use strict";a.r(s);var n=a(29),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_10-自定义组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-自定义组件"}},[t._v("#")]),t._v(" 10.自定义组件")]),t._v(" "),a("h2",{attrs:{id:"创建自定义组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建自定义组件"}},[t._v("#")]),t._v(" 创建自定义组件")]),t._v(" "),a("p",[t._v("类似于页面，一个自定义组件由 json， wxml， wxss， js 四个文件组成，要编写一个自定义组件，需要在json 文件中进行自定义组件进行声明，（将 component 字段设置 true 可将这一组文件设置为自定义组件）")]),t._v(" "),a("h2",{attrs:{id:"使用自定义组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用自定义组件"}},[t._v("#")]),t._v(" 使用自定义组件")]),t._v(" "),a("p",[t._v("使用已注册的自定义组件前， 首先要在页面的 json 文件中进行引用声明。此时需要提供每个自定义组件的标签名和对应的自定义组件文件路径")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"usingComonents"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"component-tag-name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path/to/the/custom/component"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这样， 在页面的 wxml 中就可以像使用基础组件一样使用自定义组件。节点名即自定义组件的标签名，节点属性即传递给组件的属性值。")]),t._v(" "),a("blockquote",[a("p",[t._v("开发者工具 1.02.1810190 及以上版本支持在 app.json 中声明 usingComponents 字段， 在此处声明的自定义组件是为全局组件，在小程序内的页面或自定义组件中可以直接使用而无需声明。")])]),t._v(" "),a("p",[t._v("代码示例")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("view")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("component-tag-name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("inner-text")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("some-text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("component-tag-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("view")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("自定义组件的 wxml 节点结构 在与数据结合之后， 将被插入到引用位置内。")]),t._v(" "),a("h2",{attrs:{id:"细节注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#细节注意事项"}},[t._v("#")]),t._v(" 细节注意事项")]),t._v(" "),a("ul",[a("li",[t._v("因为 WXML 节点标签只能是 小写字母， 下划线，中划线组成，所以自定义组件的标签名只能包含这么字符。 （大写也是支持的， 微信文档可能有问题）")]),t._v(" "),a("li",[t._v("自定义组件也是可以引用自定义组件的， 引用方式相同。")]),t._v(" "),a("li",[t._v("自定义组件和页面所在项目根目录名不能以 'wx-' 为前缀，否则会报错。\n注意， 是否在页面文件中使用 usingComponents 会使得页面的 this 对象的原型稍有差异，包括：")]),t._v(" "),a("li",[t._v("使用 usingComponent 页面的原型与不使用时不一致， 即 Object.getProtoTypeOf(this)结果不同。")]),t._v(" "),a("li",[t._v("使用 usingComponent 时会多一些方法，如 selectComponent")]),t._v(" "),a("li",[t._v("出于性能考虑，使用 usingComponent 时， setData 内容不会被直接深复制，即 this.setData({field: obj}) 后 this.data.field === obj。（深复制会在这个值被组件间传递时发生）")])]),t._v(" "),a("blockquote",[a("p",[t._v("如果页面比较复杂， 新增或删除 usingComponent 定义段时建议重新测试一下。")])]),t._v(" "),a("h2",{attrs:{id:"插槽-slot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插槽-slot"}},[t._v("#")]),t._v(" 插槽 slot")]),t._v(" "),a("p",[t._v("多个插槽需要设置 name， 并在 js 文件中 配置 multipleSlots: true")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\toptions"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tmultipleSlots"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);