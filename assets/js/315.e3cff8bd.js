(window.webpackJsonp=window.webpackJsonp||[]).push([[315],{956:function(t,n,s){"use strict";s.r(n);var a=s(10),r=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_6-mongodb入门与应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-mongodb入门与应用"}},[t._v("#")]),t._v(" 6.MongoDB入门与应用")]),t._v(" "),n("h2",{attrs:{id:"mongodb简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongodb简介"}},[t._v("#")]),t._v(" MongoDB简介")]),t._v(" "),n("p",[t._v("MongoDB是一个基于分布式文件存储的数据库。由C++语言编写，旨在为WEB应用提供可扩展的高性能数据存储解决方案。")]),t._v(" "),n("p",[t._v("MongoDB是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。它支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是它支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。")]),t._v(" "),n("h2",{attrs:{id:"mongodb特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongodb特性"}},[t._v("#")]),t._v(" MongoDB特性")]),t._v(" "),n("ul",[n("li",[t._v("高可扩展性")]),t._v(" "),n("li",[t._v("没有复杂关系")]),t._v(" "),n("li",[t._v("低成本")]),t._v(" "),n("li",[t._v("半结构化数据")]),t._v(" "),n("li",[t._v("架构灵活")])]),t._v(" "),n("p",[t._v("多表查询不及 sql ，在服务端对 js 执行效率比较低，读写性能不出色")]),t._v(" "),n("h2",{attrs:{id:"mongodb安装与配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongodb安装与配置"}},[t._v("#")]),t._v(" MongoDB安装与配置")]),t._v(" "),n("p",[t._v("官网 mongodb.com")]),t._v(" "),n("p",[t._v("download 版本 "),n("br"),t._v("\nversion: \t\tcurrent release  "),n("br"),t._v("\nOS: \t\t\t\tRHEL 7.2 Linux IBM Z Series "),n("br"),t._v("\nPageage: \t\tserver "),n("br")]),t._v(" "),n("h3",{attrs:{id:"安装-mongodb-community-edition"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装-mongodb-community-edition"}},[t._v("#")]),t._v(" 安装 MongoDB Community Edition")]),t._v(" "),n("p",[t._v("阿里云镜像 https://developer.aliyun.com/mirror/")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("配置MongoDB yum源")]),t._v(" "),n("ol",[n("li",[t._v("创建 "),n("br"),t._v("\nvim /etc/yum.repos.d/mongodb-org.repo  "),n("br")]),t._v(" "),n("li",[t._v("写文件")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\t[mongodb-org]\n\tname = MongoDB Repository\n\tbaseurl = https://mirrors.aliyun.com/mongodb/yum/redhat/$releasever/mongodb-org/4.2/x86_64/\n\tpgpcheck = 1\n\tenable = 1\n\tgpgkey = https://www.mongodb.org/static/pgp/server-4.2.asc\n")])])])]),t._v(" "),n("li",[n("p",[t._v("yum search mongodb\n查看 要下载 的内容， yun install -y mongodb  或者  yum install -y mongodb-org")])]),t._v(" "),n("li",[n("p",[t._v("通过yum 安装 MongoDB\nyun install -y mongodb "),n("br"),t._v("\n或者 "),n("br"),t._v("\nyum install -y mongodb-org")])])]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[n("p",[t._v("启动MongoDB\nservice mongod start")]),t._v(" "),n("p",[t._v("mongo 安装位置  /usr/bin 文件夹下")]),t._v(" "),n("blockquote",[n("p",[t._v("service mongod start 启动之后，就不能再 mongo 的安装位置 ./mongod 命令启动，否则会与之前的启动生成的文件冲突。")])]),t._v(" "),n("blockquote",[n("p",[t._v("查看运行不一样的启动命令之后再不能启动的原因 "),n("br"),t._v("\nservice mongod  status  // 查看 mongod 状态 "),n("br"),t._v("\ntar -f /var/log/mongod/mongod.log // 查看mongod日志 "),n("br"),n("br"),t._v("\n// 此时原因是 在 /var/lib/mongo/ 下有几个文件没有操作权限了。 "),n("br"),t._v("\nchown mongod:mongod -R WiredTigerLAS.wt WiredTiger.turtle   "),n("br"),t._v("\n// 修改用户权限，修改这两个文件的权限  WiredTigerLAS.wt WiredTiger.turtle 此时这个文件夹下的文件的 用户名 和 用户组 都是  mongod  ， 此时还没有启动 "),n("br"),t._v("\nchown mongod:mongod -R mongo/    // 在 lib 文件下操作此命令")])])])]),t._v(" "),n("h3",{attrs:{id:"mongodb常用配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongodb常用配置"}},[t._v("#")]),t._v(" MongoDB常用配置")]),t._v(" "),n("p",[t._v("配置文件位置 /etc/mongod.conf")]),t._v(" "),n("ul",[n("li",[t._v("配置文件mongod.conf  "),n("br")])]),t._v(" "),n("ol",[n("li",[n("p",[t._v("日志配置\t\t\t\tsystemLog  "),n("br")])]),t._v(" "),n("li",[n("p",[t._v("数据存储配置\t\t\tstorage  "),n("br"),t._v("\nstorage : "),n("br"),t._v("\njournal:   // 表示是否开启 journal 日志持久存储，用来恢复日志的 ，最基础的特性。 "),n("br"),t._v("\nenable： ture // 默认开启， 对 mongodb 进程有帮助 "),n("br")])]),t._v(" "),n("li",[n("p",[t._v("进程管理配置\t\t\tprocessManagement  "),n("br"),t._v("\nprocessManagement:  "),n("br"),t._v("\nfork: true  // 后台运行 "),n("br"),t._v("\npidFilePath:      "),n("br"),t._v("\ntimeZoneInfo: /usr/share/zoneinfo")])]),t._v(" "),n("li",[n("p",[t._v("网络配置\t\t\t\tnet  "),n("br"),t._v("\nnet:   "),n("br"),t._v("\nport: 27017 "),n("br"),t._v("\nbindIp: 127.0.0.1 "),n("br")])]),t._v(" "),n("li",[n("p",[t._v("安全配置\t\t\t\tsecurity  "),n("br"),t._v("\nsecurity:\n// 开启用户访问控制 ， 不配置 客户端 拿到 ip 就可以访问数据库。"),n("br"),t._v("\nauthorization: enabled")])])]),t._v(" "),n("h2",{attrs:{id:"mongodb数据查询与应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongodb数据查询与应用"}},[t._v("#")]),t._v(" MongoDB数据查询与应用")]),t._v(" "),n("h3",{attrs:{id:"mongodb基础概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongodb基础概念"}},[t._v("#")]),t._v(" MongoDB基础概念")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("文档：数据的基本单元，相当于关系型数据库中的行")]),t._v(" "),n("ol",[n("li",[t._v("由键值对组成的有序集  "),n("br")]),t._v(" "),n("li",[t._v("不仅区分大小写，还区分数据类型  "),n("br")])])]),t._v(" "),n("li",[n("p",[t._v("集合：多个文档组成集合，文档可以是不同的结构，相当于关系型数据库中的表")]),t._v(" "),n("ol",[n("li",[t._v("不能以system开头，且不能使用保留字符  "),n("br")]),t._v(" "),n("li",[t._v("动态模式可以使一个集合中包含多样化文档对象  "),n("br")])])]),t._v(" "),n("li",[n("p",[t._v("数据库：多个集合聚合组成数据库")]),t._v(" "),n("ol",[n("li",[t._v("数据库名称区分大小写  "),n("br")]),t._v(" "),n("li",[t._v("几个特殊意义的数据库：admin(用户数据)、local(本地数据)、config(配置数据)  "),n("br")])])])]),t._v(" "),n("h3",{attrs:{id:"mongodb客户端shell"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongodb客户端shell"}},[t._v("#")]),t._v(" MongoDB客户端shell")]),t._v(" "),n("ul",[n("li",[t._v("客户端shell可以使用命令行与MongoDB实例进行交互。 "),n("br")]),t._v(" "),n("li",[t._v("它是一个功能完备的JavaScript解释器，所以又称为JavaScript shell，可以运行任意JavaScript代码。 "),n("br")]),t._v(" "),n("li",[t._v("通过shell可以对数据进行基本操作：CURD "),n("br")])]),t._v(" "),n("p",[t._v("mongo\t直接进入命令行")]),t._v(" "),n("p",[t._v("用 shell 执行 javascript "),n("br"),t._v("\ncd /tmp "),n("br"),t._v("\nvim run.js "),n("br")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" userName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zs'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" timeStamp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" insertData "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("loginUser")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" userName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("loginTime")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" timeStamp\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" db "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'log'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连接数据库；")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" msg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" db"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("login"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("insertData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("mongo run.js "),n("br"),t._v("\nmongo "),n("br"),t._v("\nuse log "),n("br"),t._v("\nshow tables "),n("br"),t._v("\ndb.login.find()")]),t._v(" "),n("p",[t._v("// 批量插入")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" userName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zs'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" timeStamp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" loginData "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("loginUser")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" userName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("loginTime")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" timeStamp\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" insertData "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" loginData "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tinsertData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" db "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'log'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连接数据库；")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" msg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" db"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("login"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("insertData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("写好之后输入命令 "),n("br"),t._v("\nmongo run.js "),n("br"),t._v("\nmongo "),n("br"),t._v("\nuse log   // 直接mongo 默认的是 test 数据库"),n("br"),t._v("\ndb.login.find()")]),t._v(" "),n("p",[t._v("db  // db 命令 显示当前数据库名字 "),n("br"),t._v("\nshow dbs //")]),t._v(" "),n("p",[t._v("mongo --host 127.0.0.1 --port 27017 "),n("br"),t._v("\nmongo 127.0.0.1:27017  "),n("br"),t._v("\nmongo 127.0.0.1:27017/log")]),t._v(" "),n("h3",{attrs:{id:"mongodb连接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongodb连接"}},[t._v("#")]),t._v(" MongoDB连接")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 标准URI连接语法\n// 连接 host1 ， host2 可以连接 复制机 （TODO 名称可能不对）， 当 host1 挂掉的时候，会直接连 host2\nmongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]\n\n// 例子\nmongo  'mongodb://127.0.0.1:27017'\n")])])]),n("ul",[n("li",[t._v("mongodb://   \t\t\t\t\t"),n("br"),t._v("\t\nuri协议，固定格式   "),n("br")]),t._v(" "),n("li",[t._v("username:password@\t    "),n("br"),t._v("\t\n可选，连接数据库用户验证    "),n("br")]),t._v(" "),n("li",[t._v("host\t\t    "),n("br"),t._v("\t\n必须指定至少一个host，如果连接复制集，可指定多个主机地址    "),n("br")]),t._v(" "),n("li",[t._v("port\t\t\t    "),n("br"),t._v("\t\n可选，默认为27017    "),n("br")]),t._v(" "),n("li",[t._v("/database\t\t\t\t    "),n("br"),t._v("\n连接数据库名称，若不指定默认打开test数据库    "),n("br")]),t._v(" "),n("li",[t._v("?options\t\t    "),n("br"),t._v("\t\t\t\n连接选项")])]),t._v(" "),n("h3",{attrs:{id:"mongodb用户管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongodb用户管理"}},[t._v("#")]),t._v(" MongoDB用户管理")]),t._v(" "),n("blockquote",[n("p",[t._v("所有角色")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("权限")]),t._v(" "),n("th",[t._v("说明")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("read")]),t._v(" "),n("td",[t._v("允许用户读取指定数据库")])]),t._v(" "),n("tr",[n("td",[t._v("readWrite")]),t._v(" "),n("td",[t._v("允许用户读写指定数据库")])]),t._v(" "),n("tr",[n("td",[t._v("dbAdmin")]),t._v(" "),n("td",[t._v("允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile")])]),t._v(" "),n("tr",[n("td",[t._v("userAdmin")]),t._v(" "),n("td",[t._v("允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户")])]),t._v(" "),n("tr",[n("td",[t._v("clusterAdmin")]),t._v(" "),n("td",[t._v("只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。")])]),t._v(" "),n("tr",[n("td",[t._v("readAnyDatabase")]),t._v(" "),n("td",[t._v("只在admin数据库中可用，赋予用户所有数据库的读权限")])]),t._v(" "),n("tr",[n("td",[t._v("readWriteAnyDatabase")]),t._v(" "),n("td",[t._v("只在admin数据库中可用，赋予用户所有数据库的读写权限")])]),t._v(" "),n("tr",[n("td",[t._v("userAdminAnyDatabase")]),t._v(" "),n("td",[t._v("只在admin数据库中可用，赋予用户所有数据库的userAdmin权限")])]),t._v(" "),n("tr",[n("td",[t._v("dbAdminAnyDatabase")]),t._v(" "),n("td",[t._v("只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。")])]),t._v(" "),n("tr",[n("td",[t._v("root")]),t._v(" "),n("td",[t._v("只在admin数据库中可用。超级账号，超级权限")])])])]),t._v(" "),n("ul",[n("li",[t._v("新建用户")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("show dbs   // \nuse admin   \ndb.createUser({\n\tuser: 'root',\n\tpwd: 'root',\n\troles: [{role: 'root', db: 'admin'}]   // db 代表的是数据库\n})\nshow tables\ndb.system.users.find()\ndb.system.users.find().pertty()  // 格式化\n\n")])])]),n("ul",[n("li",[t._v("开启权限")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// mongod.conf 开启用户访问权限\nsecurity: \n\t\t// 开启用户访问控制 ， 不配置 客户端 拿到 ip 就可以访问数据库。<br>\n\t\tauthorization: enabled\n\n// 修改 enabled , defrag 配置，配置为 never  \necho never > /sys/kernel/mm/transparent_hugepage/enabled \necho never > /sys/kernel/mm/transparent_hugepage/defrag\n\n// 运行 mongodb\nserver mongod start\n// mongo 会提示 该如何操作， 操作如下 \ndb.disableFreeMonitoring();\n\nserver mongod restart\n\n// 连接数据库\nmongo 'mongodb://root:root@127.0.0.1:27017/admin'   // 新建用户先连接到超级管理员上，之后创建用户\n\n// 为 log 数据库新建read用户\nuse log\ndb.createUser({\n\tuser: 'log',\n\tpwd: 'log',\n\troles: [{role: 'read', db: 'log'}]   // db 代表的是数据库\n})\nmongo 'mongodb://log:log@127.0.0.1:27017/log'   // 新建用户先连接到超级管理员上，之后创建用户\nshow tables   // 得到 表 的名字\ndb.login.find()   // login  表的名字\ndb.login.insert({loginUser: 'log'})   // 返回 ok: 0, errmsg:  \"...'\n\nmongo 'mongodb://root:root@127.0.0.1:27017/admin'   // 新建用户先连接到超级管理员上，之后创建用户\n\n// 为 log 数据库新建 readWrite 用户\nuse log\ndb.createUser({\n\tuser: 'log1',\n\tpwd: 'log1',\n\troles: [{role: 'readWrite', db: 'log'}]   // db 代表的是数据库\n})\nmongo 'mongodb://log1:log1@127.0.0.1:27017/log'   // 新建用户先连接到超级管理员上，之后创建用户\nshow tables   // 得到 表 的名字\ndb.login.find()   // login  表的名字\ndb.login.insert({loginUser: 'log'})   // 返回 ok: 0, errmsg:  \"...'\n// db.login.find().skip(1001).pretty()\n")])])]),n("blockquote",[n("p",[t._v("创建单个数据库用户，就在这个数据库下创建用户 "),n("br"),t._v("\n要全局的 就在 admin 数据库下创建")])]),t._v(" "),n("h3",{attrs:{id:"mongodb数据库、集合操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongodb数据库、集合操作"}},[t._v("#")]),t._v(" MongoDB数据库、集合操作")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("use database\t\t"),n("br"),t._v("\n切换数据库，"),n("strong",[t._v("如果不存在则创建")]),t._v("， datbase 表示数据库名称")])]),t._v(" "),n("li",[n("p",[t._v("show dbs\t\t\t\t"),n("br"),t._v("\n查看所有数据库")])]),t._v(" "),n("li",[n("p",[t._v("db\t\t\t\t\t"),n("br"),t._v("\n查看当前数据库")])]),t._v(" "),n("li",[n("p",[t._v("db.dropDatabase()\t\t"),n("br"),t._v("\n删除当前数据库")])]),t._v(" "),n("li",[n("p",[t._v("db.createCollection('collection')\t\t"),n("br"),t._v("\n创建集合  （集合 理解为 表）")])]),t._v(" "),n("li",[n("p",[t._v("db.collection.renameCollection ('x')\t"),n("br"),t._v("\n重命名集合")])]),t._v(" "),n("li",[n("p",[t._v("db.login.drop() "),n("br"),t._v("\n删除集合  login 是集合的名字")])])]),t._v(" "),n("h3",{attrs:{id:"mongodb文档操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongodb文档操作"}},[t._v("#")]),t._v(" MongoDB文档操作")]),t._v(" "),n("p",[t._v("collection 是表的名字")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("db.collection.insert(document)\t\t"),n("br"),t._v("\n插入文档 ，"),n("strong",[t._v("如果没有这张表，则会新建表")])])]),t._v(" "),n("li",[n("p",[t._v("db.collection.update(query,update) \t"),n("br"),t._v("\n更新文档")]),t._v(" "),n("blockquote",[n("p",[t._v("参数还有第三个对象， 一般不用")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\tdb.test.insert({\n\t\ttitle: 'title',\n\t\tdescripttion: 'des',\n\t\tby: 'by',\n\t\turl: 'url',\n\t\ttab: ['mongodb', 'database', 'noSQL'],\n\t\tscore: 100\n\t})\n\n\tdb.test.update({'title': 'title'}, {$set: {'title': 'MongoDB'}})\n\n\tdb.test.find().pretty()\n")])])])]),t._v(" "),n("li",[n("p",[t._v("db.collection.deleteOne(query)\t"),n("br"),t._v("\n删除单个文档")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\t// 删除 count 为 6 的数据\n\tdb.login.deleteOne({count: 6})  \n")])])])]),t._v(" "),n("li",[n("p",[t._v("db.collection.deleteMany(query)\t\t"),n("br"),t._v("\n删除多个文档")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\t// 删除 count 小于 2 的数据\n\tdb.login.deleteMany({'count': {$lte: 2}})\n")])])])]),t._v(" "),n("li",[n("p",[t._v("db.collection.find(query,projection)\t"),n("br"),t._v("\n查找文档 "),n("br"),t._v("\nquery 查询条件 "),n("br"),t._v("\nprojection  匹配条件 id: 1 name：0      1 是 显示")]),t._v(" "),n("p",[t._v("find 第一个参数 query 是条件 "),n("br"),t._v("\nfind 第二个参数 projection 如果不写相当胡 select *  "),n("br")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\tdb.test.find({}, {_id: 1, title: 1}) // 数据只打印 _id , title\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\t// 查找一定条数的数据 db.login.find.limit()\n\tdb.login.find.limit(10) // 查找 十条 数据\t\n\n\t// 查找具体位置的数据 db.login.find.skip()\n\tdb.login.find.skip(900) // 查找 九百条 之后的 数据\t\n")])])])])]),t._v(" "),n("h3",{attrs:{id:"文档查询-特殊符号"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#文档查询-特殊符号"}},[t._v("#")]),t._v(" 文档查询$特殊符号")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("$lt / $lte\t\t"),n("br"),t._v("\n小于(<) / 小于等于(<=)")])]),t._v(" "),n("li",[n("p",[t._v("$gt / $gte\t\t"),n("br"),t._v("\n大于(>) / 大于等于(>=)")])]),t._v(" "),n("li",[n("p",[t._v("$ne\t\t"),n("br"),t._v("\n不等于(!=)")])]),t._v(" "),n("li",[n("p",[t._v("$or\t\t"),n("br"),t._v("\n条件查询 or")])]),t._v(" "),n("li",[n("p",[t._v("$set\t\t"),n("br"),t._v("\nupdate操作时set")])]),t._v(" "),n("li",[n("p",[t._v("$unset\t"),n("br"),t._v("\n删除字段")])])]),t._v(" "),n("h2",{attrs:{id:"远程登录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#远程登录"}},[t._v("#")]),t._v(" 远程登录")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('\tmongo "mongodb://root:root@192.168.31.114/admin  // 这里可能登不上去，查看 port端口是否开启\n\t\n\tfirewall-cmd --add-port=27017/tcp --permanent\n\tfirewall-cmd --reload\n\n\t// 在 mongo.conf 中 将 bindIp 注销掉\n\t# bindIp: 127.0.0.1\n\tbindIp: 0.0.0.0\n\tservice mongod restart\n')])])])])}),[],!1,null,null,null);n.default=r.exports}}]);