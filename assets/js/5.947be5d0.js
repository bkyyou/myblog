(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{354:function(t,a,e){t.exports=e.p+"assets/img/7.3.79b9921a.jpg"},528:function(t,a,e){t.exports=e.p+"assets/img/6.5.876bfcf1.jpg"},529:function(t,a,e){t.exports=e.p+"assets/img/6.6.51692a3c.jpg"},530:function(t,a,e){t.exports=e.p+"assets/img/6.7.c3a4999b.jpg"},531:function(t,a,e){t.exports=e.p+"assets/img/7.1.3960fffc.jpg"},532:function(t,a,e){t.exports=e.p+"assets/img/7.2.80f9c406.jpg"},533:function(t,a,e){t.exports=e.p+"assets/img/7.5.c229125b.jpg"},534:function(t,a,e){t.exports=e.p+"assets/img/7.6.64a3eec8.jpg"},535:function(t,a,e){t.exports=e.p+"assets/img/7.7.95f5f227.jpg"},536:function(t,a,e){t.exports=e.p+"assets/img/7.8.e5318b8d.jpg"},537:function(t,a,e){t.exports=e.p+"assets/img/7.9.ea27615a.jpg"},538:function(t,a,e){t.exports=e.p+"assets/img/7.10.46fbf1ab.jpg"},760:function(t,a,e){"use strict";e.r(a);var s=e(29),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_7-dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-dockerfile"}},[t._v("#")]),t._v(" 7.Dockerfile")]),t._v(" "),s("h2",{attrs:{id:"初识-dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初识-dockerfile"}},[t._v("#")]),t._v(" 初识 dockerfile")]),t._v(" "),s("p",[t._v("Dockerfile 就是用来构建 docker 镜像的构建文件，命令脚本")]),t._v(" "),s("p",[t._v("通过这个脚本可以生成镜像，镜像是一层一层的，脚本一个个的命令，每一个命令都是一层")]),t._v(" "),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# dockerfile1\n# 创建一个dockefile文件，名字可以随意，建议 dockerfile\n# 文件中的内容 指令（大写）  参数\nFROM centos\n\nVOLUME ["volume01", "volume02"]\n\nCMD echo "----end----"\nCMD /bin/bash\n')])])]),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 启动的命令，生成新的镜像\ndocker build -f dockerfile1 -t kuangshen/centos:1.0 .\n")])])]),s("ul",[s("li",[t._v("效果")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(528),alt:"dockerfile生成镜像"}})]),t._v(" "),s("ul",[s("li",[t._v("启动dockerfile生成的镜像")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(529),alt:"dockerfile生成镜像"}})]),t._v(" "),s("p",[t._v('这个卷和外部一定有一个同步的目录， VOLUME ["volume01", "volume02"] 这是一个匿名挂载')]),t._v(" "),s("ul",[s("li",[t._v("docker inspect 683cc14f1028")])]),t._v(" "),s("p",[t._v("查看一下卷挂载的路径")]),t._v(" "),s("p",[s("img",{attrs:{src:e(530),alt:"容器外的目录"}})]),t._v(" "),s("ul",[s("li",[t._v("在 volume01 下新建 container.txt 文件")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@VM-0-4-centos _data]# docker exec -it  683cc14f1028 /bin/bash\n[root@683cc14f1028 /]# ls \nbin  dev  etc  home  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var  volume01  volume02\n[root@683cc14f1028 /]# \n")])])]),s("ul",[s("li",[t._v("查看同步")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@VM-0-4-centos docker-test-volume]# cd /var/lib/docker/volumes/d80b2c4e503acf6d64820f14af70e688e91fbb80da26c013c12441db36c8d33f/_data\n[root@VM-0-4-centos _data]# ls\ncontainer.txt\n")])])]),s("blockquote",[s("p",[t._v("这种方式我们未来使用的非常多，因为我们通常会构建自己的镜像，假设我们构建镜像的时候没有挂载卷，要手动镜像挂载，-v卷名：容器内路径")])]),t._v(" "),s("ul",[s("li",[t._v("修改容器名字")])]),t._v(" "),s("p",[t._v("docker rename 容器原来名 要改为的名字")]),t._v(" "),s("p",[t._v("docker rename wizardly_hoover myblog")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docke run -it --name docker01 kuangshen/centos:1.0\n")])])]),s("h2",{attrs:{id:"构建步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建步骤"}},[t._v("#")]),t._v(" 构建步骤")]),t._v(" "),s("ol",[s("li",[t._v("编写一个 dockerfile 文件")]),t._v(" "),s("li",[t._v("docker build 构建成一个镜像")]),t._v(" "),s("li",[t._v("docker run 运行镜像")]),t._v(" "),s("li",[t._v("docker pull 发布镜像(DockerHub, 阿里云镜像仓库)")])]),t._v(" "),s("p",[t._v("官网做法")]),t._v(" "),s("p",[s("img",{attrs:{src:e(531),alt:"官网做法"}})]),t._v(" "),s("p",[s("img",{attrs:{src:e(532),alt:"官网做法"}})]),t._v(" "),s("p",[t._v("很多官方的镜像都是基础包，很多功能没有，我们通常都是自己搭镜像！")]),t._v(" "),s("p",[t._v("官方既然可以做镜像，那我们也可以")]),t._v(" "),s("h2",{attrs:{id:"dockerfile-构建过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-构建过程"}},[t._v("#")]),t._v(" DockerFile 构建过程")]),t._v(" "),s("h3",{attrs:{id:"基础知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础知识"}},[t._v("#")]),t._v(" 基础知识")]),t._v(" "),s("ol",[s("li",[t._v("每个保留关键字（指令）都必须是大写字母")]),t._v(" "),s("li",[t._v("执行从上到下顺序执行")]),t._v(" "),s("li",[t._v("#表示注释")]),t._v(" "),s("li",[t._v("每一个指令都会创建一个新的镜像层，并提交")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(354),alt:"基础知识"}})]),t._v(" "),s("blockquote",[s("p",[t._v("dockerfile是面向开发的，我们以后要发布项目，做镜像，就需要编写 dockerfile 文件，这个文件十分简单！")])]),t._v(" "),s("blockquote",[s("p",[t._v("DockerFile: 构建文件，定义了一切的步骤，源代码")])]),t._v(" "),s("blockquote",[s("p",[t._v("DockerImages: 通过 DockerFile 构建生成镜像，最终发布和运行的产品(原来是 jar war)")])]),t._v(" "),s("blockquote",[s("p",[t._v("Docker 容器： 容器就是镜像运行起来提供服务的")])]),t._v(" "),s("h2",{attrs:{id:"dockerfile-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-指令"}},[t._v("#")]),t._v(" DockerFile 指令")]),t._v(" "),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("FROM    # 基础镜像，一切从这里开始构建\nMAINTAINER     # 镜像是谁写的，姓名 + 邮箱\nRUN     # 镜像构建的时候需要运行的命令\nADD     # 步骤： tomcat 镜像，这个 tomcat 压缩包！添加内容\nWORKWORKDIR    # 镜像工作的目录\nVULUME    # 挂载的目录\nEXPOSE   # 暴露端口配置\nRUN\nCMD     # 指定这个容器启动的时候要运行的命令， 只有一个会生效，可被替代\nENTRYPOINT    # 指定这个容器启动的时候要运行的命令， 可以追加命令\nONBUILD    # 当构建一个被继承的 dockerfile 这个时候就会运行 ONBUILD 的指令。触发指令\nCOPY    # 类似 ADD， 将我们的文件拷贝到镜像中\nENV    # 构建的时候设置环境变量\n")])])]),s("p",[s("img",{attrs:{src:e(354),alt:"DockerFile 指令"}})]),t._v(" "),s("h2",{attrs:{id:"实战测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实战测试"}},[t._v("#")]),t._v(" 实战测试")]),t._v(" "),s("p",[t._v("Docker Hub 中 99% 镜像都是从这个镜像过来的，FROM acratch， 然后配置需要的软件和配置来进行构建")]),t._v(" "),s("p",[t._v("/home/bkyyou/build")]),t._v(" "),s("h3",{attrs:{id:"创建一个自己-centos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建一个自己-centos"}},[t._v("#")]),t._v(" 创建一个自己 centos")]),t._v(" "),s("ol",[s("li",[t._v("编写 DockerFile 文件")])]),t._v(" "),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# 在 /home 下创建 mydockerfile 文件\n\n# 进入并新建 dockerfile\n\nvim mydockerfile  # 这应该是 创建并进入文件\n\n[root@VM-0-4-centos dockerfile]# cat mydockerfile \nFROM centos\nMAINTAINER bkyyou<596737739@qq.com>\n\nENV MYPATH /user/local\nWORKDIR $MYPATH \n\nRUN yum -y install vim\nRUN yum -y install net-tools\n\nEXPOSE 80\n\nCMD echo $MYPARG\nCMD echo "---end---"\nCMD /bin/bash\n')])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("通过文件构建镜像")])]),t._v(" "),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 构建命令\ndocker build -f mydockerfile -t mycentos:0.1 .\n# docker build -f 文件路径 -t 镜像名:[tag] .\n\n# 输出结果\nSuccessfully built 6046e39a4129\nSuccessfully tagged mycentos:0.1\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("测试运行")])]),t._v(" "),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker run -it mycentos:0.1\n")])])]),s("h3",{attrs:{id:"对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对比"}},[t._v("#")]),t._v(" 对比")]),t._v(" "),s("p",[s("img",{attrs:{src:e(533),alt:"初始的centos"}})]),t._v(" "),s("p",[t._v("增加之后的")]),t._v(" "),s("p",[s("img",{attrs:{src:e(534),alt:"构建之后的centos"}})]),t._v(" "),s("h3",{attrs:{id:"我们可以列出本地进行的变更历史"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我们可以列出本地进行的变更历史"}},[t._v("#")]),t._v(" 我们可以列出本地进行的变更历史")]),t._v(" "),s("p",[s("img",{attrs:{src:e(535),alt:"构建之后的centos"}})]),t._v(" "),s("p",[t._v("我们平时拿到一个镜像可以研究一下它是怎么做的？？？")]),t._v(" "),s("h2",{attrs:{id:"cmd-和-entrypoint-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cmd-和-entrypoint-区别"}},[t._v("#")]),t._v(" CMD 和 ENTRYPOINT 区别")]),t._v(" "),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("CMD     # 指定这个容器启动的时候要运行的命令， 只有一个会生效，可被替代\nENTRYPOINT    # 指定这个容器启动的时候要运行的命令， 可以追加命令\n")])])]),s("h3",{attrs:{id:"测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),s("ol",[s("li",[t._v("测试 cmd 命令")])]),t._v(" "),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# 创建\n[root@VM-0-4-centos dockerfile]# cat dockerfile-cmd-test \nFROM centos\nCMD ["ls", "-a"]\n\n# 运行 DockerFile\n[root@VM-0-4-centos dockerfile]# docker build -f dockerfile-cmd-test -t cmdtest .\nSending build context to Docker daemon  3.072kB\nStep 1/2 : FROM centos\n ---\x3e 300e315adb2f\nStep 2/2 : CMD ["ls", "-a"]\n ---\x3e Running in fcc953102731\nRemoving intermediate container fcc953102731\n ---\x3e e9d62dd456d6\nSuccessfully built e9d62dd456d6\nSuccessfully tagged cmdtest:\n\n# 运行 镜像\n[root@VM-0-4-centos dockerfile]# docker run cmdtest\n.\n..\n.dockerenv\nbin\ndev\n...\n\n## 启动镜像并追加命令\n[root@VM-0-4-centos /]# docker run  cmdtest -l\ndocker: Error response from daemon: OCI runtime create failed: container_linux.go:367: starting container process caused: exec: "-l": executable file not found in $PATH: unknown.\n[root@VM-0-4-centos /]# \n\n# 原因\ncmd 的清理下 -l 替换了 CMD [\'ls\', \'-a\'] 命令， -l 不是命令所以报错\n\n## 这样是可以启动的\n[root@VM-0-4-centos /]# docker run  cmdtest ls -al\ntotal 56\ndrwxr-xr-x   1 root root 4096 Jun  1 01:19 .\ndrwxr-xr-x   1 root root 4096 Jun  1 01:19 ..\n')])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("测试 ENTRYPOINT")])]),t._v(" "),s("ul",[s("li",[t._v("文件 docker-cmd-entrypoint")])]),t._v(" "),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("FROM centos\nENTRYPOINAT ['ls', '-a']\n")])])]),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# 构建镜像\n[root@VM-0-4-centos dockerfile]# docker build -f dockerfile-cmd-entrypoint -t entrypointtest .\nSending build context to Docker daemon  4.096kB\nStep 1/2 : FROM centos\n ---\x3e 300e315adb2f\nStep 2/2 : ENTRYPOINT ["ls", "-a"]\n ---\x3e Running in bf4ffd26ac23\nRemoving intermediate container bf4ffd26ac23\n ---\x3e a66521477d0f\nSuccessfully built a66521477d0f\nSuccessfully tagged entrypointtest:latest\n\n# 启动镜像\ndocker run a66521477d0f\n.\n..\n.dockerenv\nbin\n...\n\n# 追加命令启动\n[root@VM-0-4-centos dockerfile]# docker run a66521477d0f -l\ntotal 56\ndrwxr-xr-x   1 root root 4096 Jun  1 01:31 .\ndrwxr-xr-x   1 root root 4096 Jun  1 01:31 ..\n-rwxr-xr-x   1 root root    0 Jun  1 01:31 .dockerenv\nlrwxrwxrwx   1 root root    7 Nov  3  2020 bin -> usr/bin\ndrwxr-xr-x   5 root root  340 Jun  1 01:31 dev\ndrwxr-xr-x   1 root root 4096 Jun  1 01:31 etc\ndrwxr-xr-x   2 root root 4096 Nov  3  2020 home\n\n')])])]),s("p",[t._v("DockerFile 许多命令都是十分相似，需要了解他们的区别")]),t._v(" "),s("h2",{attrs:{id:"实战-tomcat镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实战-tomcat镜像"}},[t._v("#")]),t._v(" 实战 tomcat镜像")]),t._v(" "),s("blockquote",[s("p",[t._v("这是自己构建了 一个 tomcat 镜像")])]),t._v(" "),s("ol",[s("li",[t._v("准备镜像文件 tomcat 压缩包， jdk 压缩包")])]),t._v(" "),s("ul",[s("li",[t._v("tomcat 下准备的文件\n"),s("img",{attrs:{src:e(536),alt:"tomcat 下准备的文件"}})])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("编写 dockerfile 文件")])]),t._v(" "),s("p",[t._v("官方命令 Dockerfile, build 会自动寻找这个文件， 就不需要 -f 指定了")]),t._v(" "),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("FROM centos\nMAINTAINER bikeyou<596737739@qq.com>\n\nCOPY readme.txt /usr/local/readme.txt\n\nADD jdk-8u60-linux-x64.tar.gz /usr/local/\nADD apache-tomcat-9.0.46.tar.gz /usr/local/\n\nRUN yum -y install vim\n\nENV MYPATH /usr/local\nWORKDIR $MYPATH\n\nENV JAVA_HOME /usr/local/jdk1.8.0_60\nENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\n\nENV CATALINA_HOME /usr/local/apache-tomcat-9.0.46\nENV CATLINA_BASH /usr/local/apache-tomcat-9.0.46\nENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin\n\nEXPOSE 8080\n\nCMD /usr/local/apache-tomcat-9.0.46/bin/startup.sh && tail -F /usr/local/apache-tomcat-9.0.46/bin/logs/catalina.out\n")])])]),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# $PATH 是啥 ???? TODO\n$PATH:/usr/local/jdk1.8.0_60\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("在 /home/bkyyou/build/tomcat 进行操作")])]),t._v(" "),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 构建\ndocker build -t diytomcat .\n\n# 展示\n[root@VM-0-4-centos tomcat]# docker build -t diytomcat .\nSending build context to Docker daemon  192.7MB\nStep 1/15 : FROM centos\n ---\x3e 300e315adb2f\nStep 2/15 : MAINTAINER bikeyou<596737739@qq.com>\n ---\x3e Using cache\n ---\x3e 002481b63eae\nStep 3/15 : COPY readme.txt /usr/local/readme.txt\n ---\x3e Using cache\n ---\x3e c79dc7d74df8\nStep 4/15 : ADD jdk-8u60-linux-x64.tar.gz /usr/local/\n ---\x3e Using cache\n ---\x3e 4ab16feb6f45\nStep 5/15 : ADD apache-tomcat-9.0.46.tar.gz /usr/local/\n ---\x3e Using cache\n ---\x3e 9e1571ae1594\nStep 6/15 : RUN yum -y install vim\n ---\x3e Using cache\n ---\x3e 09e675e49c6b\nStep 7/15 : ENV MYPATH /usr/local\n ---\x3e Running in 32851ceb2a8a\nRemoving intermediate container 32851ceb2a8a\n ---\x3e 1de38bfe9c0d\nStep 8/15 : WORKDIR $MYPATH\n ---\x3e Running in 3a2fd007662d\nRemoving intermediate container 3a2fd007662d\n ---\x3e 4c8bbc4a507a\nStep 9/15 : ENV JAVA_HOME /usr/local/jdk1.8.0_60\n ---\x3e Running in ec182ef7716c\nRemoving intermediate container ec182ef7716c\n ---\x3e bed849281a9f\nStep 10/15 : ENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\n ---\x3e Running in 5d15b7c73306\nRemoving intermediate container 5d15b7c73306\n ---\x3e 6003f805d9e8\nStep 11/15 : ENV CATALINA_HOME /usr/local/apache-tomcat-9.0.46\n ---\x3e Running in f1b5215e8b1c\nRemoving intermediate container f1b5215e8b1c\n ---\x3e d5dfe8ce7681\nStep 12/15 : ENV CATLINA_BASH /usr/local/apache-tomcat-9.0.46\n ---\x3e Running in 7dde93d3ab7c\nRemoving intermediate container 7dde93d3ab7c\n ---\x3e 74ec5f084eea\nStep 13/15 : ENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin\n ---\x3e Running in 9ae2e2a47fdd\nRemoving intermediate container 9ae2e2a47fdd\n ---\x3e a5004665ba24\nStep 14/15 : EXPOSE 8080\n ---\x3e Running in 84972bad1332\nRemoving intermediate container 84972bad1332\n ---\x3e 5b7068ce8d29\nStep 15/15 : CMD /usr/local/apache-tomcat-9.0.46/bin/startup.sh && tail -F /usr/local/apache-tomcat-9.0.46/bin/logs/catalina.out\n ---\x3e Running in 15382fdcf4cd\nRemoving intermediate container 15382fdcf4cd\n ---\x3e 854e01d4821f\nSuccessfully built 854e01d4821f\nSuccessfully tagged diytomcat:latest\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("启动自己构建的 tomcat")])]),t._v(" "),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 启动\n[root@VM-0-4-centos tomcat]# docker run -d -p 9090:8080 --name bkyyoutomcat2 -v /home/bkyyou/build/tomcat/test:/usr/local/apache-tomcat-9.0.46/webapps/test -v /home/bkyyou/build/tomcat/comcatlogs:/usr/local/apache-tomcat-9.0.46/logs diytomcat\n6930ecb18aca3a80ac220bd3e5596a4dba1a1d122892fbc4630052cc305d9fd5\n\n# 进入容器\n[root@VM-0-4-centos tomcat]# docker exec -it 6930ecb18aca /bin/bash\n[root@6930ecb18aca local]# ls\napache-tomcat-9.0.46  bin  etc  games  include  jdk1.8.0_60  lib  lib64  libexec  readme.txt  sbin  share  src\n[root@6930ecb18aca local]# \n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[s("p",[t._v("测试访问")])]),t._v(" "),s("li",[s("p",[t._v("发布项目(由于做了卷挂载我们直接在本地编写项目就可以发布了)")])])]),t._v(" "),s("p",[t._v("这个不知道是干啥的 TODO？？？\n在 test/WEB-INF  文件夹下 新建 web.xml")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="UTF-8"?>')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("web-app")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xmlns:")]),t._v("xsi")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://www.w3.org/2001/XMLSchema-instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("xmlns")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://java.sun.com/xml/ns/javaee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xmlns:")]),t._v("web")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xsi:")]),t._v("schemaLocation")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("WebApp_ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("2.5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("display-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("db"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("display-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("welcome-file-list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("welcome-file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("index.html"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("welcome-file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("welcome-file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("index.htm"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("welcome-file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("welcome-file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("index.jsp"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("welcome-file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("welcome-file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("default.html"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("welcome-file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("welcome-file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("default.htm"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("welcome-file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("welcome-file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("default.jsp"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("welcome-file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("welcome-file-list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("web-app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-jsp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<html>\n  <head>\n    <meta charset="utf-8">\n    <title>第一个 JSP 程序</title>\n  </head>\n  <body>\n    <%\n      System.out.printIn("-----my test web logs------")\n    %>\n  </body>\n</html>\n')])])]),s("blockquote",[s("p",[t._v("以后开发的步骤：需要掌握 Dokerfile 的编写，我们之后的一切都是使用 docker 镜像发布和运行")])]),t._v(" "),s("h2",{attrs:{id:"发布自己的镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发布自己的镜像"}},[t._v("#")]),t._v(" 发布自己的镜像")]),t._v(" "),s("h3",{attrs:{id:"dockerhub"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerhub"}},[t._v("#")]),t._v(" DockerHub")]),t._v(" "),s("ol",[s("li",[t._v("https://hub.docker.com/ 注册自己的账号")]),t._v(" "),s("li",[t._v("确定这个账号可以登录")])]),t._v(" "),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker login -u bkyyou\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("在我们服务器上提交自己的镜像")])]),t._v(" "),s("ul",[s("li",[t._v("登陆")])]),t._v(" "),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@VM-0-4-centos comcatlogs]# docker login --help\n\nUsage:  docker login [OPTIONS] [SERVER]\n\nLog in to a Docker registry.\nIf no server is specified, the default is defined by the daemon.\n\nOptions:\n  -p, --password string   Password\n      --password-stdin    Take the password from stdin\n  -u, --username string   Username\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("登陆完之后就可以提交镜像了，就是一步 docker push 命令")])]),t._v(" "),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 直接 push 报错了\n[root@VM-0-4-centos comcatlogs]# docker push bkyyou/diytomcat\nUsing default tag: latest\nThe push refers to repository [docker.io/bkyyou/diytomcat]\nAn image does not exist locally with the tag: bkyyou/diytomcat\n\n# 解决报错\n# 需要修改一下镜像名字，如：diytomcat 改为 bkyyou/diytomcat:1.0\ndocker tag 854e01d4821f bkyyou/diytomcat:1.0\n")])])]),s("h3",{attrs:{id:"阿里云镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阿里云镜像"}},[t._v("#")]),t._v(" 阿里云镜像")]),t._v(" "),s("ol",[s("li",[t._v("登陆阿里云镜像")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker login --username=bkyyou registry.cn-hangzhou.aliyuncs.com\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("找到容器镜像服务")]),t._v(" "),s("li",[t._v("创建命令空间\nhttps://cr.console.aliyun.com/cn-hangzhou/instances/namespaces")]),t._v(" "),s("li",[t._v("创建镜像仓库")])]),t._v(" "),s("ul",[s("li",[t._v("选择本地仓库")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(537),alt:"推到阿里云镜像的步骤"}})]),t._v(" "),s("div",{staticClass:"language-s extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 推送命令， 之后还有一个 tag， 和推送到 dockerhub 步骤一样\ndocker push bkyyou/diytomcat:1.0\n")])])]),s("p",[t._v("阿里云镜像参照官方文档")]),t._v(" "),s("p",[t._v("https://cr.console.aliyun.com/repository/cn-hangzhou/bkyyou01/bkyyoutest/details")]),t._v(" "),s("h2",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[s("img",{attrs:{src:e(538),alt:"docker整体流程"}})]),t._v(" "),s("p",[t._v("TODO docker save 和  docker load 没有用过")])])}),[],!1,null,null,null);a.default=n.exports}}]);