(window.webpackJsonp=window.webpackJsonp||[]).push([[347],{1001:function(t,a,s){"use strict";s.r(a);var n=s(10),E=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_5-mysql函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-mysql函数"}},[t._v("#")]),t._v(" 5.MySQL函数")]),t._v(" "),a("h2",{attrs:{id:"_5-1-常用函数-并不常用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-常用函数-并不常用"}},[t._v("#")]),t._v(" 5.1 常用函数（并不常用）")]),t._v(" "),a("h3",{attrs:{id:"_5-1-1-数学运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1-数学运算"}},[t._v("#")]),t._v(" 5.1.1 数学运算")]),t._v(" "),a("div",{staticClass:"language-s extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("SELECT ABS(-8) --  绝对值\nSELECT CEILING(9.1) -- 向上取整\nSELECT FLOOR(9.1) -- 向下取整\nSELECT RAND() -- 返回一个 0-1 之间的随机数\nSELECT SIGN(0) -- 判断一个数的符号 负数返回 -1； 0-0； 正数返回 1\n")])])]),a("h3",{attrs:{id:"_5-1-2-字符串函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-2-字符串函数"}},[t._v("#")]),t._v(" 5.1.2 字符串函数")]),t._v(" "),a("div",{staticClass:"language-s extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-- 字符串函数\nSELECT CHAR_LENGTH('111') -- 字符串长度\nSELECT CONCAT('wo','he','ni') -- 拼接字符串\nSELECT INSERT('我爱编程HelloWord', 1, 2, '超级')  -- 插入，替换， 从某个位置替换某个长度\nSELECT LOWER('DDDqq')  -- 转小写\nSELECT UPPER('aaqqQQ') -- 转大写\nSELECT INSTR('kuangshen','h') -- 返回第一次出现的子串的索引\nSELECT REPLACE('狂神说坚持就能成功','坚持','成功') -- 替换出现的字符串\nSELECT SUBSTR('狂神说坚持就能成功', 4, 3) -- 返回指定的子字符串 （源字符串，截取的位置，截取的长度）\nSELECT REVERSE('1122') -- 反转\n\n-- 查询姓 周 的同学， 名字， 邹\nSELECT REPLACE(StudentName, '张', '邹') FROM student WHERE StudentName LIKE '张%'\n")])])]),a("h3",{attrs:{id:"_5-1-3-时间和日期函数-记住"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-3-时间和日期函数-记住"}},[t._v("#")]),t._v(" 5.1.3 时间和日期函数（记住）")]),t._v(" "),a("div",{staticClass:"language-s extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-- 时间和日期函数（记住）\nSELECT CURRENT_DATE -- 获取当前日期\nSELECT CURDATE() -- 获取当前日期\nSELECT NOW() -- 获取当前的时间\nSELECT LOCALTIME() -- 获取本地时间\nSELECT SYSDATE() -- 获取系统时间\nSELECT YEAR(NOW()) -- 获取年\nSELECT MONTH(NOW())  -- 获取月\nSELECT DAY(NOW())  -- 获取日期\nSELECT MINUTE(NOW())  -- 获取分钟\nSELECT SECOND(NOW())  -- 获取秒\n")])])]),a("h3",{attrs:{id:"_5-1-4-系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-4-系统"}},[t._v("#")]),t._v(" 5.1.4 系统")]),t._v(" "),a("div",{staticClass:"language-s extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-- 系统\nSELECT SYSTEM_USER()\nSELECT USER()\nSELECT VERSION()\n")])])]),a("h2",{attrs:{id:"_5-2-聚合函数-常用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-聚合函数-常用"}},[t._v("#")]),t._v(" 5.2 聚合函数 （常用）")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("函数名称")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("COUNT()")]),t._v(" "),a("td",[t._v("计数 （统计数量）")])]),t._v(" "),a("tr",[a("td",[t._v("SUM()")]),t._v(" "),a("td",[t._v("求和")])]),t._v(" "),a("tr",[a("td",[t._v("AVG()")]),t._v(" "),a("td",[t._v("平均值")])]),t._v(" "),a("tr",[a("td",[t._v("MAX()")]),t._v(" "),a("td",[t._v("最大值")])]),t._v(" "),a("tr",[a("td",[t._v("MIN()")]),t._v(" "),a("td",[t._v("最小值")])]),t._v(" "),a("tr",[a("td",[t._v("...")]),t._v(" "),a("td",[t._v("...")])])])]),t._v(" "),a("h3",{attrs:{id:"练习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#练习"}},[t._v("#")]),t._v(" 练习")]),t._v(" "),a("div",{staticClass:"language-s extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 统计表中的数据，这三种方式都可以\nSELECT COUNT(studentname) FROM student -- 指定列， Count(字段)，会忽略所有的 null 值 \nSELECT COUNT(*) FROM student -- Count(*) 不会忽略所有的 null 值， 本质 计算行数\nSELECT COUNT(1) FROM student -- Count(1) 不会忽略所有的 null 值 本质 计算行数\n\n# 总和\nSELECT SUM(studentresult) AS 总和 FROM result WHERE subjectno = 1\n\n# 平均分\nSELECT AVG(studentresult) AS 平均分 FROM result\n\n# 最高分\nSELECT MAX(studentresult) AS 最高分 FROM result\n\n# 最低分\nSELECT MIN(studentresult) AS 最高分 FROM result\n")])])]),a("h2",{attrs:{id:"_5-3-数据科技别的-md5-加密-扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-数据科技别的-md5-加密-扩展"}},[t._v("#")]),t._v(" 5.3 数据科技别的 MD5 加密 （扩展）")]),t._v(" "),a("p",[t._v("主要增强算法复杂度和不可逆性")]),t._v(" "),a("p",[t._v("MD5不可逆")]),t._v(" "),a("p",[t._v("MD5 破解网站的原理，背后有一个字典，MD5 加密后的值， 加密前的值")]),t._v(" "),a("div",{staticClass:"language-s extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("DROP TABLE IF EXISTS testmd5;\nCREATE TABLE testmd5 (\n\tid INT(4) AUTO_INCREMENT NOT NULL,\n\t`name` VARCHAR(20) NOT NULL,\n\tpwd VARCHAR(50) NOT NULL DEFAULT '123456',\n\tPRIMARY KEY(id)\n) ENGINE=INNODB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8\n\nINSERT INTO testmd5(`name`)\nVALUES('zhangsan'), ('lisi'), ('wangwu')\n\nUPDATE testmd5 SET pwd = MD5(pwd) -- 加密全部的密码\n# 插入的时候加密\nINSERT INTO testmd5(`name`, pwd) VALUES('xiaoming', MD5('123456'))\n\n# 如何校验\n# 将用户传递进来的密码进行md5加密，然后对比加密后的值\nSELECT * FROM testmd5 WHERE `name` = 'xiaoming' AND pwd = MD5('123456')\n")])])])])}),[],!1,null,null,null);a.default=E.exports}}]);