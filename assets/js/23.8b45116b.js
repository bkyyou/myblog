(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{406:function(t,e,_){t.exports=_.p+"assets/img/3.3.f5b54108.jpg"},407:function(t,e,_){t.exports=_.p+"assets/img/3.4.bee7b787.jpg"},408:function(t,e,_){t.exports=_.p+"assets/img/3.1.b8ed9d2d.jpg"},409:function(t,e,_){t.exports=_.p+"assets/img/3.2.79699933.jpg"},410:function(t,e,_){t.exports=_.p+"assets/img/3.5.f59e9fda.jpg"},411:function(t,e,_){t.exports=_.p+"assets/img/3.6.7ed5d5bd.jpg"},412:function(t,e,_){t.exports=_.p+"assets/img/3.7.627e9b66.jpg"},413:function(t,e,_){t.exports=_.p+"assets/img/3.8.bf4b9f64.jpg"},414:function(t,e,_){t.exports=_.p+"assets/img/3.9.5e8fd859.jpg"},814:function(t,e,_){"use strict";_.r(e);var a=_(10),v=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_3-mysql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-mysql"}},[t._v("#")]),t._v(" 3.MySQL")]),t._v(" "),e("p",[t._v("数据库: DataBase, 是存储和管理数据的仓库")]),t._v(" "),e("p",[t._v("MySQL: 一门操作关系型数据库的编程语言, 定义操作所有关系型数据库的统一标准")]),t._v(" "),e("h2",{attrs:{id:"_3-1-关系型数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-关系型数据库"}},[t._v("#")]),t._v(" 3.1.关系型数据库")]),t._v(" "),e("p",[t._v("建立在关系模型基础上, 由多张相互联系的二维表组成的数据库")]),t._v(" "),e("h2",{attrs:{id:"_3-2-通用语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-通用语法"}},[t._v("#")]),t._v(" 3.2.通用语法")]),t._v(" "),e("ul",[e("li",[t._v("SQL 语句可以单行或者多行书写, 以分号结尾")]),t._v(" "),e("li",[t._v("SQL 语句可以使用 空格/缩进 来增强语句的可读性")]),t._v(" "),e("li",[t._v("MySQL 数据库的 SQL 语句不区分大小写")]),t._v(" "),e("li",[t._v("注释\n"),e("ul",[e("li",[t._v("单行注释: -- 注释内容 或 # 注释内容 (MySQL 特有)")]),t._v(" "),e("li",[t._v("多行注释: /* 注释内容 */")])])])]),t._v(" "),e("h2",{attrs:{id:"_3-3-sql-分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-sql-分类"}},[t._v("#")]),t._v(" 3.3.SQL 分类")]),t._v(" "),e("p",[t._v("SQL 语句通常被分为四大类")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("分类")]),t._v(" "),e("th",[t._v("名称")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("DDL")]),t._v(" "),e("td",[t._v("Data Definition Language")]),t._v(" "),e("td",[t._v("数据定义语言, 用来定义数据库对象(数据库, 表, 字段)")])]),t._v(" "),e("tr",[e("td",[t._v("DML")]),t._v(" "),e("td",[t._v("Data Manipulation Language")]),t._v(" "),e("td",[t._v("数据操作语言, 用来对数据库表中的数据进行增删改")])]),t._v(" "),e("tr",[e("td",[t._v("DQL")]),t._v(" "),e("td",[t._v("Data Query Language")]),t._v(" "),e("td",[t._v("数据查询语言, 用来查询数据库中表的记录")])]),t._v(" "),e("tr",[e("td",[t._v("DCL")]),t._v(" "),e("td",[t._v("Data Control Language")]),t._v(" "),e("td",[t._v("数据控制语言, 用来创建数据库用户、 控制数据库的访问权限")])])])]),t._v(" "),e("h2",{attrs:{id:"_3-4-数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-数据类型"}},[t._v("#")]),t._v(" 3.4.数据类型")]),t._v(" "),e("p",[t._v("MySQL 中的数据类型有很多, 主要分为三类: 数值类型、字符串类型、日期时间类型")]),t._v(" "),e("h3",{attrs:{id:"_3-4-1-数值类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-数值类型"}},[t._v("#")]),t._v(" 3.4.1.数值类型")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("大小(byte)")]),t._v(" "),e("th",[t._v("有符号(SIGNED) 范围")]),t._v(" "),e("th",[t._v("无符号(UNSIGNED) 范围")]),t._v(" "),e("th",[t._v("描述")]),t._v(" "),e("th",[t._v("备注")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("tinyint")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("(-128, 127)")]),t._v(" "),e("td",[t._v("(0, 255)")]),t._v(" "),e("td",[t._v("小整数值")]),t._v(" "),e("td",[t._v("tinyint signed / tinyint unsigned "),e("em",[e("strong",[t._v("常用")])])])]),t._v(" "),e("tr",[e("td",[t._v("smallint")]),t._v(" "),e("td",[t._v("2")]),t._v(" "),e("td",[t._v("(-32768, 32767)")]),t._v(" "),e("td",[t._v("(0, 65535)")]),t._v(" "),e("td",[t._v("大整数值")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("mediumint")]),t._v(" "),e("td",[t._v("3")]),t._v(" "),e("td",[t._v("(-8388608, 8388607)")]),t._v(" "),e("td",[t._v("(0, 16777215)")]),t._v(" "),e("td",[t._v("大整数值")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("int")]),t._v(" "),e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(-2147483648, 2147483647)")]),t._v(" "),e("td",[t._v("(0, 4294967295)")]),t._v(" "),e("td",[t._v("大整数值")]),t._v(" "),e("td",[e("em",[e("strong",[t._v("常用")])])])]),t._v(" "),e("tr",[e("td",[t._v("bigint")]),t._v(" "),e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(-2^63, 2^63)")]),t._v(" "),e("td",[t._v("(0, 2^64-1)")]),t._v(" "),e("td",[t._v("极大整数值")]),t._v(" "),e("td",[e("em",[e("strong",[t._v("常用")])])])]),t._v(" "),e("tr",[e("td",[t._v("float")]),t._v(" "),e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(-3.402823466E + 38, 3.402823466351E + 38)")]),t._v(" "),e("td",[t._v("0 和 (1.175494351E - 38, 3.402823466E + 38)")]),t._v(" "),e("td",[t._v("单精度浮点数值")]),t._v(" "),e("td",[t._v("float(5,2): 5 表示整个数字长度, 2 表示小数位个数")])]),t._v(" "),e("tr",[e("td",[t._v("double")]),t._v(" "),e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(-1.7976931348623175E + 308, 1.7976931348623175E + 308)")]),t._v(" "),e("td",[t._v("(2.2250738585072014E - 308, 1.7976931348623175E + 308)")]),t._v(" "),e("td",[t._v("双精度浮点数值")]),t._v(" "),e("td",[t._v("double(5,2): 5 表示整个数字长度, 2 表示小数位个数 "),e("em",[e("strong",[t._v("常用")])])])]),t._v(" "),e("tr",[e("td",[t._v("decimal")]),t._v(" "),e("td"),t._v(" "),e("td"),t._v(" "),e("td"),t._v(" "),e("td"),t._v(" "),e("td",[t._v("decimal(5,2): 5 表示整个数字长度, 2 表示小数位个数 (金额计算, 不允许出现精度损失的情况)")])])])]),t._v(" "),e("blockquote",[e("p",[t._v("整个数字长度表示: 整数位 + 小数位")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("age tinyint unsigned\nscore double(4,1)  # 满分100 分, 允许有一个小数\n")])])]),e("h3",{attrs:{id:"_3-4-2-字符串类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-字符串类型"}},[t._v("#")]),t._v(" 3.4.2.字符串类型")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("大小")]),t._v(" "),e("th",[t._v("描述")]),t._v(" "),e("th",[t._v("备注")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("char")]),t._v(" "),e("td",[t._v("0-255 bytes")]),t._v(" "),e("td",[t._v("定长字符串")]),t._v(" "),e("td",[t._v("char(10): 最多只能存10个字符, 不足十个字符, 也占10个字符空间 (超过十个字符会报错)  "),e("em",[e("strong",[t._v("常用")])])])]),t._v(" "),e("tr",[e("td",[t._v("varchar")]),t._v(" "),e("td",[t._v("0-65535 bytes")]),t._v(" "),e("td",[t._v("变长字符串")]),t._v(" "),e("td",[t._v("varchar(10): 最多只能存10个字符, 不足十个字符, 按照实际长度存储 (超过十个字符会报错) "),e("em",[e("strong",[t._v("常用")])])])]),t._v(" "),e("tr",[e("td",[t._v("tinyblob")]),t._v(" "),e("td",[t._v("0-255 bytes")]),t._v(" "),e("td",[t._v("不超过255个字符的二进制数据")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("tinytext")]),t._v(" "),e("td",[t._v("0-255 bytes")]),t._v(" "),e("td",[t._v("短文字符串")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("blob")]),t._v(" "),e("td",[t._v("0-65535 bytes")]),t._v(" "),e("td",[t._v("二进制形式的长文本数据")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("text")]),t._v(" "),e("td",[t._v("0-65535 bytes")]),t._v(" "),e("td",[t._v("长文本数据")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("mediumblob")]),t._v(" "),e("td",[t._v("0-16777215 bytes")]),t._v(" "),e("td",[t._v("二进制形式的中等长度文本数据")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("mediumtext")]),t._v(" "),e("td",[t._v("0-16777215 bytes")]),t._v(" "),e("td",[t._v("中等长度文本数据")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("longblob")]),t._v(" "),e("td",[t._v("0-4294967295 bytes")]),t._v(" "),e("td",[t._v("二进制形式的极大文本数据")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("longtext")]),t._v(" "),e("td",[t._v("0-4294967295 bytes")]),t._v(" "),e("td",[t._v("极大文本数据")]),t._v(" "),e("td")])])]),t._v(" "),e("blockquote",[e("p",[t._v("char 比 varchar 性能高, 因为 char 不需要判断字符串长度, 但是 varchar 会更节省空间")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("phone char(11)\nusername varchar(20)\n")])])]),e("blockquote",[e("p",[t._v("这里说的字符长度不需要考虑 字符集 中一个汉字占用几个字节的情况 ??? (算是总结, 算是疑问)")])]),t._v(" "),e("h3",{attrs:{id:"_3-4-3-日期类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-3-日期类型"}},[t._v("#")]),t._v(" 3.4.3.日期类型")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("大小(byte)")]),t._v(" "),e("th",[t._v("范围")]),t._v(" "),e("th",[t._v("格式")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("date")]),t._v(" "),e("td",[t._v("3")]),t._v(" "),e("td",[t._v("1000-01-01 至 9999-12-31")]),t._v(" "),e("td",[t._v("YYYY-MM-DD")]),t._v(" "),e("td",[t._v("日期值 "),e("em",[e("strong",[t._v("常用")])])])]),t._v(" "),e("tr",[e("td",[t._v("time")]),t._v(" "),e("td",[t._v("3")]),t._v(" "),e("td",[t._v("-838:59:59 至 838:59:59")]),t._v(" "),e("td",[t._v("HH:MM:SS")]),t._v(" "),e("td",[t._v("时间值或持续时间")])]),t._v(" "),e("tr",[e("td",[t._v("year")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("1901 至 2155")]),t._v(" "),e("td",[t._v("YYYY")]),t._v(" "),e("td",[t._v("年份值")])]),t._v(" "),e("tr",[e("td",[t._v("datetime")]),t._v(" "),e("td",[t._v("8")]),t._v(" "),e("td",[t._v("1000-01-01 00:00:00 至 9999-12-31 23:59:59")]),t._v(" "),e("td",[t._v("YYYY-MM-DD HH:MM:SS")]),t._v(" "),e("td",[t._v("混合日期和时间值 "),e("em",[e("strong",[t._v("常用")])])])]),t._v(" "),e("tr",[e("td",[t._v("timestamp")]),t._v(" "),e("td",[t._v("4")]),t._v(" "),e("td",[t._v("1970-01-01 00:00:01 至 2038-01-19 23:59:59")]),t._v(" "),e("td",[t._v("YYYY-MM-DD HH:MM:SS")]),t._v(" "),e("td",[t._v("混合日期和时间值, 时间戳")])])])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("birthday date\nupdate_time datetime\n")])])]),e("h2",{attrs:{id:"_3-5-ddl-数据库操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-ddl-数据库操作"}},[t._v("#")]),t._v(" 3.5.DDL(数据库操作)")]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 查询所有数据库\nshow databases;\n\n# 查询当前使用的数据库\nselect database();\n\n# 使用数据库\nuse 数据库名;\n\n# 创建数据库\ncreate database [if not exists] 数据库名;\n\n# 删除数据库\ndrop database [if exists] 数据库名;\n\n# 表操作\ncreate table 表名(\n  字段一 字段类型 [约束] [comment 字段1注释],\n  ...\n  字段n 字段类型 [约束] [comment 字段n注释],\n)[comment 表注释];\n")])])]),e("blockquote",[e("p",[t._v("以上语法中的 database, 也可以替换成 schema, 如: create schema db01; show schemas;")])]),t._v(" "),e("h3",{attrs:{id:"_3-5-1-约束"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-1-约束"}},[t._v("#")]),t._v(" 3.5.1.约束")]),t._v(" "),e("ul",[e("li",[t._v("概念: 约束是作用于表中字段的规则, 用于限制存储在表中的数据.")]),t._v(" "),e("li",[t._v("目的: 保证数据库中的数据的正确性、 有效性 和 完整性.")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("约束")]),t._v(" "),e("th",[t._v("描述")]),t._v(" "),e("th",[t._v("关键字")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("非空约束")]),t._v(" "),e("td",[t._v("限制该字段不能为 null")]),t._v(" "),e("td",[t._v("not null")])]),t._v(" "),e("tr",[e("td",[t._v("唯一约束")]),t._v(" "),e("td",[t._v("保证字段的所有数据都是唯一, 不重复的")]),t._v(" "),e("td",[t._v("unique")])]),t._v(" "),e("tr",[e("td",[t._v("主键约束")]),t._v(" "),e("td",[t._v("主键是一行数据的唯一标识, 要求非空且唯一")]),t._v(" "),e("td",[t._v("primary key (auto_increment 自增)")])]),t._v(" "),e("tr",[e("td",[t._v("默认约束")]),t._v(" "),e("td",[t._v("保存数据时, 如果未指定该字段值, 则采用默认值")]),t._v(" "),e("td",[t._v("default")])]),t._v(" "),e("tr",[e("td",[t._v("外键约束")]),t._v(" "),e("td",[t._v("让两张表的数据建立连接, 保证数据的一致性和完整性")]),t._v(" "),e("td",[t._v("foreign key")])])])]),t._v(" "),e("blockquote",[e("p",[t._v("实践: 表中要有 主键、 创建时间、 更新时间")])]),t._v(" "),e("h2",{attrs:{id:"_3-6-ddl-表操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-ddl-表操作"}},[t._v("#")]),t._v(" 3.6.DDL (表操作)")]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 查询当前数据库所有的表\nshow tables;\n\n# 查询表结构\ndesc 表名;\n\n# 查询建表语句\nshow create table 表名;\n")])])]),e("ul",[e("li",[t._v("修改表")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 添加字段\nalter table 表名 add 字段名 类型(长度) [commit 注释] [约束];\n\n# 修改表字段类型\nalter table 表名 modify 字段名 新数据类型(长度);\n\n# 修改字段名 和 字段类型\nalter table 表名 change 旧字段名 新字段名 类型(长度) [commit 注释] [约束];\n\n# 删除字段\nalter table 表名 drop column 字段名;\n\n# 修改表名\nrename table 表名 to 新表名;\n")])])]),e("ul",[e("li",[t._v("删除")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 删除表\ndrop table [if exists] 表名;\n")])])]),e("blockquote",[e("p",[t._v("删除表时, 表中的数据也会被全部删除")])]),t._v(" "),e("ul",[e("li",[t._v("2021 版 idea 生成表的 sql")])]),t._v(" "),e("p",[e("img",{attrs:{src:_(406),alt:"生成表的 sql"}})]),t._v(" "),e("h2",{attrs:{id:"_3-7-dml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-dml"}},[t._v("#")]),t._v(" 3.7.DML")]),t._v(" "),e("p",[t._v("DML 英文全称是 Data Manipulation Language(数据操作语言), 用来对数据库中的表的数据记录进行增、删、改操作")]),t._v(" "),e("ul",[e("li",[t._v("添加数据 INSERT")]),t._v(" "),e("li",[t._v("修改数据 UPDATE")]),t._v(" "),e("li",[t._v("删除数据 DELETE")])]),t._v(" "),e("h3",{attrs:{id:"_3-7-1-insert-语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-1-insert-语法"}},[t._v("#")]),t._v(" 3.7.1.insert 语法")]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 指定字段添加数据\ninsert into 表名(字段名1, 字段名2, ...) values(值1, 值2, ...);\n\n# 全部字段添加数据\ninsert into 表名 values(值1, 值2, ...);\n\n# 批量添加数据 (指定字段)\n\ninsert into 表名(字段名1, 字段名2, ...) values(值1, 值2, ...) (值1, 值2, ...);\n# 批量添加数据 (全部字段)\ninsert into 表名 values(值1, 值2, ...) (值1, 值2, ...);\n")])])]),e("ul",[e("li",[t._v("示例")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("insert into tb_emp(username, name, job, create_time, update_time)\nvalues ('齐天大圣', '孙悟空', 1, now(), now());\n\ninsert into  tb_emp(id, username, name, password, gender, image, job, entrydate, create_time, update_time)\nvalues(null, '平天大圣', '牛魔王', '123', 1, null, 1, '2023-1-1', now(), now());\n")])])]),e("ul",[e("li",[t._v("注意事项\n"),e("ul",[e("li",[t._v("插入数据时, 指定的字段顺序需要与值的顺序是一一对应的")]),t._v(" "),e("li",[t._v("字符串和日期类型数据应该包含在引号中")]),t._v(" "),e("li",[t._v("插入的数据大小, 应该在字段改定的范围内")])])])]),t._v(" "),e("h3",{attrs:{id:"_3-7-2-update-语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-2-update-语法"}},[t._v("#")]),t._v(" 3.7.2.update 语法")]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 修改数据\nupdate 表名 set 字段名1 = 值1, 字段名 = 值2, ... [where 条件];\n")])])]),e("ul",[e("li",[t._v("示例")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("update tb_emp set password='12345678', update_time=now() where id = 1;\n")])])]),e("ul",[e("li",[t._v("注意事项\n"),e("ul",[e("li",[t._v("修改语句的条件可以有, 也可以没有, 如果没有则会修改整个表的所有数据")])])])]),t._v(" "),e("h3",{attrs:{id:"_3-7-3-delete-语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-3-delete-语法"}},[t._v("#")]),t._v(" 3.7.3.delete 语法")]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 删除数据\ndelete from 表名 [where 条件];\n")])])]),e("ul",[e("li",[t._v("示例")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("delete from tb_emp where name = '关羽';\n")])])]),e("ul",[e("li",[t._v("注意事项\n"),e("ul",[e("li",[t._v("DELETE 语句的条件可以有, 也可以没有, 如果没有条件, 则会删除整张表的所有数据")]),t._v(" "),e("li",[t._v("DELETE 语句不能删除某一个字段的值 (如果要操作, 可以使用 UPDATE, 将该字段的置为 null)")])])])]),t._v(" "),e("h2",{attrs:{id:"_3-8-dql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-dql"}},[t._v("#")]),t._v(" 3.8.DQL")]),t._v(" "),e("p",[t._v("用来查询数据库表中的记录")]),t._v(" "),e("p",[t._v("关键字: select")]),t._v(" "),e("h3",{attrs:{id:"_3-8-1-select-语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-1-select-语法"}},[t._v("#")]),t._v(" 3.8.1.select 语法")]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select 字段列表 \nfrom 表名列表 \nwhere 条件列表\ngroup by 分组字段列表\nhaving 分组后条件列表\norder by 排序字段列表\nlimit 分页参数\n")])])]),e("p",[e("img",{attrs:{src:_(407),alt:"select 语法"}})]),t._v(" "),e("h3",{attrs:{id:"_3-8-2-基本查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-2-基本查询"}},[t._v("#")]),t._v(" 3.8.2.基本查询")]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 查询多个字段\nselect 字段1, 字段2, ... from 表名; \n\n# 查询所有字段 (通配符)\nselect * from 表名; \n\n# 设置别名\nselect 字段1 [as 别名1], 字段2 [as 别名2], ... from 表名;\n\n# 去除重复记录\nselect distinct 字段列表 from 表名;\n")])])]),e("ul",[e("li",[t._v("基本查询示例")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 别名查询\nselect name as 姓名, gender as 性别 from tb_emp;\nselect name 姓名, gender 性别 from tb_emp;\nselect name as '姓 名', gender as 性别 from tb_emp;\n\n# 去重查询\nselect distinct job  from tb_emp;\n")])])]),e("blockquote",[e("ul",[e("li",[t._v("号代表查询所有字段, 在实际开发中尽量少使用 (不直观、 影响效率)")])])]),t._v(" "),e("h3",{attrs:{id:"_3-8-3-条件查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-3-条件查询"}},[t._v("#")]),t._v(" 3.8.3.条件查询")]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select 字段列表 from 表名 where 条件列表;\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("比较运算符")]),t._v(" "),e("th",[t._v("功能")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v(">")]),t._v(" "),e("td",[t._v("大于")])]),t._v(" "),e("tr",[e("td",[t._v(">=")]),t._v(" "),e("td",[t._v("大于等于")])]),t._v(" "),e("tr",[e("td",[t._v("<=")]),t._v(" "),e("td",[t._v("小于等于")])]),t._v(" "),e("tr",[e("td",[t._v("=")]),t._v(" "),e("td",[t._v("等于")])]),t._v(" "),e("tr",[e("td",[t._v("<> 或 !=")]),t._v(" "),e("td",[t._v("不等于")])]),t._v(" "),e("tr",[e("td",[t._v("between ... and ...")]),t._v(" "),e("td",[t._v("在某个范围之内(含最小、 最大值)")])]),t._v(" "),e("tr",[e("td",[t._v("in(...)")]),t._v(" "),e("td",[t._v("在 in 之后的列表中的值, 多选一")])]),t._v(" "),e("tr",[e("td",[t._v("like 占位符")]),t._v(" "),e("td",[t._v("模糊匹配(_ 匹配单个字符, % 匹配任意个字符)")])]),t._v(" "),e("tr",[e("td",[t._v("is null")]),t._v(" "),e("td",[t._v("是 null")])]),t._v(" "),e("tr",[e("td",[t._v("is not null")]),t._v(" "),e("td",[t._v("不是 null")])])])]),t._v(" "),e("table",[e("tr",[e("th",[t._v("逻辑运算符")]),t._v(" "),e("th",[t._v("功能")])]),t._v(" "),e("tr",[e("td",[t._v("and 或 &&")]),t._v(" "),e("td",[t._v("并且 (多个条件同时成立)")])]),t._v(" "),e("tr",[e("td",[t._v("or 或 ||")]),t._v(" "),e("td",[t._v("或者 (多个条件任意一个成立)")])]),t._v(" "),e("tr",[e("td",[t._v("not 或 !")]),t._v(" "),e("td",[t._v("非 , 不是")])])]),t._v(" "),e("ul",[e("li",[t._v("示例")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select * from tb_emp where name = '孙悟空';\nselect * from tb_emp where id > 1;\n# 为空筛选\nselect * from tb_emp where tb_emp.entrydate is null;\n# 时间筛选、 between 使用、 && 和 between 替换使用\nselect * from tb_emp where create_time >= '2023-10-23 00:00:00' && create_time <= '2023-11-2 00:00:00';\nselect * from tb_emp where entrydate >= '2022-1-23' && entrydate <= '2023-11-2';\nselect * from tb_emp where entrydate between '2022-1-23' and '2023-11-2';\nselect * from tb_emp where entrydate between '2022-1-23' and '2023-11-2' and gender = 2;\nselect * from tb_emp where entrydate between '2022-1-23' and '2023-11-2' && gender = 1;\n# in 和 or 替换使用\nselect  * from tb_emp where  job = 1 or job = 2 or job = 4;\nselect  * from tb_emp where job in (1, 2);\n# like 使用 查询名字是两个字\nselect * from tb_emp where name like '__';\n# 查姓孙的\nselect * from tb_emp where name like '孙%';\n# 模糊匹配\nselect * from tb_emp where username like '%大圣%';\n")])])]),e("h3",{attrs:{id:"_3-8-4-dql-聚合函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-4-dql-聚合函数"}},[t._v("#")]),t._v(" 3.8.4.DQL-聚合函数")]),t._v(" "),e("p",[t._v("将一列数据作为整体, 进行纵向运算")]),t._v(" "),e("blockquote",[e("p",[t._v("不对 null 值进行运算统计, 所以统计总数之类的要找 "),e("em",[e("strong",[t._v("非空")])]),t._v(" 字段")])]),t._v(" "),e("ul",[e("li",[t._v("语法")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select 聚合函数(字段列表) from 表名;\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("函数")]),t._v(" "),e("th",[t._v("功能")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("count")]),t._v(" "),e("td",[t._v("统计数量")])]),t._v(" "),e("tr",[e("td",[t._v("max")]),t._v(" "),e("td",[t._v("最大值")])]),t._v(" "),e("tr",[e("td",[t._v("min")]),t._v(" "),e("td",[t._v("最小值")])]),t._v(" "),e("tr",[e("td",[t._v("avg")]),t._v(" "),e("td",[t._v("平均值")])]),t._v(" "),e("tr",[e("td",[t._v("sum")]),t._v(" "),e("td",[t._v("求和")])])])]),t._v(" "),e("ul",[e("li",[t._v("示例")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# count(字段) 统计字段非空的个数, 所以注意统计数量要找非空字段\nselect count(id) from tb_emp;\n# count(常量) 只要 count 不为 null 的常量都可以\nselect count('') from tb_emp;\n# count(*) 推荐, mysql 底层做了优化\nselect count(*) from tb_emp;\n# 统计员工最迟入职的时间\nselect max(entrydate) from tb_emp;\n# 统计平均值\nselect avg(id) from tb_emp;\n# 求和\nselect sum(id) from tb_emp;\n")])])]),e("blockquote",[e("p",[t._v("null 值不参与所有聚合函数运算\n统计数量可以使用: count(字段), count(常量), count("),e("em",[t._v("), 推荐使用 count(")]),t._v(")\nwhere 中不能使用 count")])]),t._v(" "),e("h3",{attrs:{id:"_3-8-5-dql-分组查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-5-dql-分组查询"}},[t._v("#")]),t._v(" 3.8.5.DQL-分组查询")]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select 字段列表 from 表名 [where 条件] group by 分组字段名 [having 分组后过滤条件];\n")])])]),e("blockquote",[e("p",[t._v("分组查询 字段列表 是为了查询结果之后 展示出来的表格的表头")])]),t._v(" "),e("ul",[e("li",[t._v("示例")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 根据性别进行分组\nselect gender, count(*) from tb_emp group by gender;\nselect job, count(*) from tb_emp where entrydate >= '2023-11-1' group by job;\n# 筛选出 2023-11-1 以后入职的, 并且对职位进行分组, 获取员工职位大于等于2的\nselect job, count(*) from tb_emp where entrydate >= '2023-11-1' group by job having job >= 2;\n# 筛选出 2023-11-1 以后入职的, 并且对职位进行分组, 获取员工数量大于等于2的职位\nselect job, count(*) from tb_emp where entrydate >= '2023-11-1' group by job having count(*) >= 2;\n")])])]),e("ul",[e("li",[e("p",[t._v("where 和 having 区别")]),t._v(" "),e("ul",[e("li",[t._v("执行时机不同: where 是分组之前进行过滤, 不满足 where 条件, 不参与分组; 而 having 是分组之后对结果进行过滤")]),t._v(" "),e("li",[t._v("判断条件不同: where 不能使用聚合函数进行判断, 而 having 可以")])])]),t._v(" "),e("li",[e("p",[t._v("注意事项")])])]),t._v(" "),e("blockquote",[e("p",[e("em",[e("strong",[t._v("分组之后, 查询的字段一般为聚合函数和分组字段, 查询其他字段无任何意义")])]),t._v("\n执行顺序: where > 聚合函数 > having")])]),t._v(" "),e("h3",{attrs:{id:"_3-8-6-dql-排序查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-6-dql-排序查询"}},[t._v("#")]),t._v(" 3.8.6.DQL-排序查询")]),t._v(" "),e("ul",[e("li",[t._v("语法")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select 字段列表 from 表名 [where 条件列表] [group by 分组字段] order by 字段1 排序方式, 字段1 排序方式, ...;\n")])])]),e("ul",[e("li",[e("p",[t._v("排序方式")]),t._v(" "),e("ul",[e("li",[t._v("ASC: 升序 (默认值)")]),t._v(" "),e("li",[t._v("DESC: 降序")])])]),t._v(" "),e("li",[e("p",[t._v("示例")])])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 升降序排序\nselect * from tb_emp order by entrydate asc;\nselect * from tb_emp order by entrydate desc;\n# 根据入职时间进行 升序排序, 入职时间相同, 再按照 更新时间 进行降序排序\nselect * from tb_emp order by entrydate, update_time desc;\n")])])]),e("ul",[e("li",[t._v("注意事项")])]),t._v(" "),e("blockquote",[e("p",[t._v("如果是多字段排序, 当第一个字段值相同时, 才会根据第二个字段进行排序")])]),t._v(" "),e("h3",{attrs:{id:"_3-8-7-dql-分页查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-7-dql-分页查询"}},[t._v("#")]),t._v(" 3.8.7.DQL-分页查询")]),t._v(" "),e("ul",[e("li",[t._v("语法")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select 字段列表 from 表名 limit 起始索引, 查询记录数;\n")])])]),e("ul",[e("li",[t._v("示例")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 查询第一页数据, 每页展示2条\nselect * from tb_emp order by entrydate desc limit 0,2;\n# 查询第二页数据, 每页展示 2 条\nselect * from tb_emp limit 2,2;\n")])])]),e("ul",[e("li",[t._v("注意事项")])]),t._v(" "),e("blockquote",[e("p",[t._v("起始索引从 0 开始, 起始索引 = (查询页码 - 1) * 每页显示条数\n分页查询是数据库的方言, 不同的数据库实现不同, MySQL 是 limit\n如果查询的是第一页的数据, 其实索引可以忽略, 直接简写 limit 2")])]),t._v(" "),e("h3",{attrs:{id:"_3-8-8-案例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-8-案例"}},[t._v("#")]),t._v(" 3.8.8.案例")]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 查询男性和女性员工数量\nselect if(gender = 1, '男性员工', '女性员工') as 性别, count(*) as 员工数量\nfrom tb_emp group by gender;\n\n# 职工信息统计\nselect job , count(*) from tb_emp group by job;\nselect (case job when 1 then '班主任' when 2 then '讲师' when 3 then '学工主管' when 4 then '教研主管' else '未分配职位' end) as 职位名称,\ncount(*) from tb_emp group by job;\n")])])]),e("ul",[e("li",[t._v("函数")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("if(表达式, tvalue, fvalue): 当表达式为 true 时, 取值 tvalue, 为 false 取值 fvalue\ncase expr when value1 then result1 [when value2 then result2...] [else result] end\n")])])]),e("h2",{attrs:{id:"_3-9-idea自带的图形化工具使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-idea自带的图形化工具使用"}},[t._v("#")]),t._v(" 3.9.idea自带的图形化工具使用")]),t._v(" "),e("ul",[e("li",[t._v("第一次使用需要下载")])]),t._v(" "),e("p",[e("img",{attrs:{src:_(408),alt:"idea数据库使用"}})]),t._v(" "),e("ul",[e("li",[t._v("打开之前的控制台")])]),t._v(" "),e("p",[e("img",{attrs:{src:_(409),alt:"打开之前的控制台"}})]),t._v(" "),e("ul",[e("li",[t._v("右键 console 文件改名")])]),t._v(" "),e("p",[t._v("打开的图形化工具 console 这个文件可以改名, 右键 -> Rename file")]),t._v(" "),e("h2",{attrs:{id:"_3-10-多表设计"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-多表设计"}},[t._v("#")]),t._v(" 3.10.多表设计")]),t._v(" "),e("p",[t._v("项目开发中, 在进行数据库表结构设计时, 会根据业务需求及业务模块之间的关系, 分析并设计表结构, 由于业务之间项目关联, 所以各个表结构之间也存在着各种联系, 基本上分三种")]),t._v(" "),e("ul",[e("li",[t._v("一对多(多对一)")]),t._v(" "),e("li",[t._v("多对多")]),t._v(" "),e("li",[t._v("一对一")])]),t._v(" "),e("h3",{attrs:{id:"_3-10-1-一对多"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-1-一对多"}},[t._v("#")]),t._v(" 3.10.1.一对多")]),t._v(" "),e("ul",[e("li",[t._v("案例")])]),t._v(" "),e("p",[t._v("部门及员工模块的表结构设计")]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("create  table tb_dept (\n    id int unsigned primary key auto_increment comment '主键id',\n    name varchar(10) not null unique comment '部门名称',\n    create_time datetime  not null comment '创建日期',\n    update_time datetime  not null comment '更新日期'\n) charset = utf8 comment '部门表';\n\ninsert into tb_dept (id, name, create_time, update_time)\nvalues\n       (null, '学工部', now(), now()),\n       (null, '教研部', now(), now()),\n       (null, '咨询部', now(), now()),\n       (null, '就业部', now(), now()),\n       (null, '人事部', now(), now());\n")])])]),e("h3",{attrs:{id:"_3-10-2-多表问题分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-2-多表问题分析"}},[t._v("#")]),t._v(" 3.10.2.多表问题分析")]),t._v(" "),e("ul",[e("li",[t._v("现象")])]),t._v(" "),e("p",[t._v("部门数据可以直接删除, 然而还有部门员工归属于该部门下, 此时就出现数据的不完整、不一致的问题")]),t._v(" "),e("ul",[e("li",[t._v("问题分析")])]),t._v(" "),e("p",[t._v("目前上述的两张表, 在数据库层面, 并未建立关联, 所以是无法保证数据的一致性和完整性的")]),t._v(" "),e("h3",{attrs:{id:"_3-10-3-外键约束"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-3-外键约束"}},[t._v("#")]),t._v(" 3.10.3.外键约束")]),t._v(" "),e("p",[t._v("使用 foreign key 定义外键关联另一张表")]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 创建表的时候\ncreate table 表名 (\n  字段名 数据类型,\n  ...\n  [constraint] [外键名称] foreign key(外键字段名) references 主表(字段名)\n);\n\n# 建完表后, 添加外键\nalter table 表名 add constraint 外键名称 foreign key(外键字段名) references 主表(字段名);\n")])])]),e("blockquote",[e("p",[t._v("不推荐 物理外键, 也就是 foreign key, 一般使用 逻辑外键")])]),t._v(" "),e("ul",[e("li",[t._v("物理外键缺点\n"),e("ul",[e("li",[t._v("影像增删改的效率 (需要检查外键关系)")]),t._v(" "),e("li",[t._v("仅用于单节点数据库, 不适用分布式, 集群场景")]),t._v(" "),e("li",[t._v("容易引发数据库的锁死问题, 消耗性能")])])])]),t._v(" "),e("h3",{attrs:{id:"_3-10-4-一对一"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-4-一对一"}},[t._v("#")]),t._v(" 3.10.4.一对一")]),t._v(" "),e("ul",[e("li",[t._v("案例")])]),t._v(" "),e("p",[t._v("用户 与 身份证信息")]),t._v(" "),e("p",[t._v("关系: 一对一关系, 用于单表拆分, 用一张表的基础字段放在一张表中, 其他字段放在另一张表中, 以提高效率")]),t._v(" "),e("p",[t._v("实现: 在任意一方加入外键, 关联另外一方主键, 并且设置外键唯一的(unique)")]),t._v(" "),e("p",[e("img",{attrs:{src:_(410),alt:"表"}})]),t._v(" "),e("h3",{attrs:{id:"_3-10-5-多对多"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-5-多对多"}},[t._v("#")]),t._v(" 3.10.5.多对多")]),t._v(" "),e("ul",[e("li",[t._v("案例")])]),t._v(" "),e("p",[t._v("学生与课程的关系")]),t._v(" "),e("p",[t._v("一个学生可以有多个课程, 一门课程也可以有多个学生选择")]),t._v(" "),e("ul",[e("li",[t._v("实现: 建立第三张表, 中间表至少包含两个外键, 分别关联两方主键")])]),t._v(" "),e("p",[e("img",{attrs:{src:_(411),alt:"表"}})]),t._v(" "),e("h2",{attrs:{id:"_3-11-多表查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-11-多表查询"}},[t._v("#")]),t._v(" 3.11.多表查询")]),t._v(" "),e("p",[t._v("指从多张表中查询数据")]),t._v(" "),e("ul",[e("li",[t._v("笛卡尔积")])]),t._v(" "),e("p",[t._v("笛卡尔积是指数学中, 两个集合(A集合和B集合)的所有组合情况 (在多表查询中, 需要消除无效的笛卡尔积)")]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select * from tb_dept, tb_emp;\nselect * from tb_emp, tb_dept where tb_emp.dept_id = tb_dept.id;\n")])])]),e("h3",{attrs:{id:"_3-11-1-多表查询分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-11-1-多表查询分类"}},[t._v("#")]),t._v(" 3.11.1.多表查询分类")]),t._v(" "),e("ul",[e("li",[t._v("连接查询\n"),e("ul",[e("li",[t._v("内连接: 相当于查询 A, B "),e("em",[e("strong",[t._v("交集部分数据")])])]),t._v(" "),e("li",[t._v("外连接\n"),e("ul",[e("li",[t._v("左外连接: 查询左表所有数据(包括两张表交集部分数据)")]),t._v(" "),e("li",[t._v("右外连接: 查询右表所有数据(包括两张表交集部分数据)")])])])])]),t._v(" "),e("li",[t._v("子查询")])]),t._v(" "),e("h3",{attrs:{id:"_3-11-2-内连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-11-2-内连接"}},[t._v("#")]),t._v(" 3.11.2.内连接")]),t._v(" "),e("ul",[e("li",[t._v("语法")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 隐式内连接\nselect 字段列表 from 表1, 表2 where 条件...;\n\n# 显示内连接\nselect 字段列表 from 表1 [inner] join 表2 on 连接条件...;\n")])])]),e("ul",[e("li",[t._v("内连接示例")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 查询员工名字和所属部门 (隐式内连接实现)\nselect tb_emp.name, tb_dept.name from tb_emp, tb_dept where tb_emp.dept_id = tb_dept.id;\n# 起别名 (as 可以隐藏)\nselect e.name, d.name  from tb_emp as e, tb_dept as d where e.dept_id = d.id;\n# 查询员工名字和所属部门 (显式内连接实现)\nselect tb_emp.name, tb_dept.name from tb_dept inner join tb_emp on tb_emp.dept_id = tb_dept.id;\n# 起别名 as 和 inner 简写\nselect e.name, d.name from tb_dept d join tb_emp e on e.dept_id = d.id;\n")])])]),e("h3",{attrs:{id:"_3-11-3-外连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-11-3-外连接"}},[t._v("#")]),t._v(" 3.11.3.外连接")]),t._v(" "),e("ul",[e("li",[t._v("语法")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 左外连接, 会完全包含左表和公共的数据\nselect 字段列表 from 表1 left [outer] join 表2 on 连接条件...;\n# 右外连接, 会完全包含右表和公共的数据\nselect 字段列表 from 表1 right [outer] join 表2 on 连接条件...;\n")])])]),e("ul",[e("li",[t._v("示例")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 查询员工表所有员工信息, 和对应的部门名称 (左外连接)\nselect e.name, d.name from tb_emp e left join tb_dept d on e.dept_id = d.id;\n# 查询部门表所有部门名称, 和对应的员工名称 (左外连接)\nselect e.name, d.name from tb_dept d left join tb_emp e on e.dept_id = d.id;\n# 查询部门表所有部门名称, 和对应的员工名称 (右外连接)\nselect e.name, d.name from tb_dept d right join tb_emp e on e.dept_id = d.id;\n")])])]),e("blockquote",[e("p",[t._v("以 join 划分左右")])]),t._v(" "),e("h3",{attrs:{id:"_3-11-4-子查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-11-4-子查询"}},[t._v("#")]),t._v(" 3.11.4.子查询")]),t._v(" "),e("p",[t._v("SQL 语句中嵌套 select 语句, 称为嵌套查询, 又称子查询")]),t._v(" "),e("ul",[e("li",[t._v("语句")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("select * from t1 where column1 = (select column1 from t2);\n")])])]),e("ul",[e("li",[e("p",[t._v("子查询外部语句可以是 insert、 update、delete、 select 的任意一个, 最常见的是 select")])]),t._v(" "),e("li",[e("p",[t._v("分类")]),t._v(" "),e("ul",[e("li",[t._v("标量子查询: 子查询返回的结果是单个值")]),t._v(" "),e("li",[t._v("列子查询: 子查询返回的结果是一列")]),t._v(" "),e("li",[t._v("行子查询: 子查询返回的结果是一行")]),t._v(" "),e("li",[t._v("表子查询: 子查询返回的结果是多行多列")])])]),t._v(" "),e("li",[e("p",[t._v("标量子查询")])])]),t._v(" "),e("p",[t._v("子查询返回的结果是单个值(数字、字符串、日期等), 最简单的形式")]),t._v(" "),e("p",[t._v("常用操作符")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("= > < >= <= <>\n")])])]),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 查询教研部所有员工\nselect id from tb_dept where name = '教研部';\n# 标量子查询\nselect * from tb_emp where dept_id = (select id from tb_dept where name = '教研部');\n")])])]),e("ul",[e("li",[t._v("列子查询")])]),t._v(" "),e("p",[t._v("子查询返会的结果是一列(可以是多行)")]),t._v(" "),e("p",[t._v("常见的操作符")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("in、 not in 等\n")])])]),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 查询教研部和咨询部所有员工信息\nselect  id from tb_dept where name in ('教研部', '咨询部');\nselect * from tb_emp where dept_id in (select  id from tb_dept where name in ('教研部', '咨询部'));\n")])])]),e("ul",[e("li",[t._v("行子查询")])]),t._v(" "),e("p",[t._v("子查询返回的结果是一行 (可以是多列)")]),t._v(" "),e("p",[t._v("常用的操作符")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("=、 <>、 in、 not in\n")])])]),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 查询与 嫦娥 入职日期 和 职位 相同的员工信息\nselect entrydate, job from tb_emp where name = '嫦娥';\nselect * from tb_emp where entrydate = (select entrydate from tb_emp where name = '嫦娥') && job = (select job from tb_emp where name = '嫦娥');\n# 换种优化写法\nselect * from tb_emp where (entrydate, job) = (select entrydate, job from tb_emp where name = '嫦娥');\n")])])]),e("blockquote",[e("p",[t._v("查询到多列的结果也是可以拆开来用的, 一条一条匹配")])]),t._v(" "),e("ul",[e("li",[t._v("表子查询")])]),t._v(" "),e("p",[t._v("子查询返回的结果是多行多列, 常作为 "),e("em",[e("strong",[t._v("临时表")])])]),t._v(" "),e("p",[t._v("常用操作符")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("in\n")])])]),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 查询入职日期是 2023-11-1 之后员工的信息和部门信息\nselect * from tb_emp where entrydate > '2023-11-1';\n\nselect * from (select * from tb_emp where entrydate > '2023-11-1') e, tb_dept d where d.id = e.dept_id;\n# 筛选具体列字段\nselect e.*, d.name from (select * from tb_emp where entrydate > '2023-11-1') e, tb_dept d where d.id = e.dept_id;\n\n# 利用内连接查询\nselect e.name, d.name from tb_emp e\n     join tb_dept d\n        on e.entrydate >= '2023-11-1' && e.dept_id = d.id;\n")])])]),e("h2",{attrs:{id:"_3-12-多表查询案例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-12-多表查询案例"}},[t._v("#")]),t._v(" 3.12.多表查询案例")]),t._v(" "),e("p",[e("img",{attrs:{src:_(412),alt:"多表查询案例"}})]),t._v(" "),e("p",[t._v("p60 - p61 (多表查询案例1和2)")]),t._v(" "),e("h2",{attrs:{id:"_3-13-事务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-13-事务"}},[t._v("#")]),t._v(" 3.13.事务")]),t._v(" "),e("p",[t._v("事务是一组操作的集合, 他是一个不可分割的工作单位. 事务会把所有操作作为一个整体一起向系统提交或撤销请求操作, 即这些操作 "),e("em",[e("strong",[t._v("要么同时成功, 要么同时失败")])])]),t._v(" "),e("ul",[e("li",[t._v("注意事项")])]),t._v(" "),e("blockquote",[e("p",[t._v("默认 MySQL 的事务是自动提交的, 也就是说, 当执行一条 DML 语句, MySQL 会立即隐式的提交事务")])]),t._v(" "),e("h3",{attrs:{id:"_3-13-1-操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-13-1-操作"}},[t._v("#")]),t._v(" 3.13.1.操作")]),t._v(" "),e("ul",[e("li",[t._v("事务控制")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("开启事务: start transaction; 或 begin;\n提交事务: commit;\n回滚事务: rollback;\n")])])]),e("h3",{attrs:{id:"_3-13-2-四大特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-13-2-四大特性"}},[t._v("#")]),t._v(" 3.13.2.四大特性")]),t._v(" "),e("ul",[e("li",[t._v("原子性")])]),t._v(" "),e("p",[t._v("事务是不可分割的最小单位, 要么全部成功, 要么全部失败")]),t._v(" "),e("ul",[e("li",[t._v("一致性")])]),t._v(" "),e("p",[t._v("事务完成(回滚或提交)时, 必须使所有数据都保持一致状态")]),t._v(" "),e("ul",[e("li",[t._v("隔离性")])]),t._v(" "),e("p",[t._v("数据库系统提供的隔离机制, 保证事务在不受外部并发操作影响的独立环境下运行")]),t._v(" "),e("ul",[e("li",[t._v("持久性")])]),t._v(" "),e("p",[t._v("事务一旦回滚或提交, 他对数据库中的数据的改变是永久的")]),t._v(" "),e("h2",{attrs:{id:"_3-14-索引"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-14-索引"}},[t._v("#")]),t._v(" 3.14.索引")]),t._v(" "),e("p",[t._v("是帮助数据库 高效获取数据 的 数据结构")]),t._v(" "),e("ul",[e("li",[t._v("数据库有无索引查找\n"),e("img",{attrs:{src:_(413),alt:"数据库查找"}})])]),t._v(" "),e("blockquote",[e("p",[t._v("这里的二叉树只是示例, 并不是真实的 mysql 底层数据结构")])]),t._v(" "),e("h3",{attrs:{id:"_3-14-1-索引的优缺点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-14-1-索引的优缺点"}},[t._v("#")]),t._v(" 3.14.1.索引的优缺点")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("优点")]),t._v(" "),e("ul",[e("li",[t._v("提高数据查询的效率, 降低数据库的io成本")]),t._v(" "),e("li",[t._v("通过索引列对数据进行排序, 降低数据排序的成本, 降低 CPU 消耗")])])]),t._v(" "),e("li",[e("p",[t._v("缺点")]),t._v(" "),e("ul",[e("li",[t._v("索引会占用存储内存")]),t._v(" "),e("li",[t._v("索引大大提高了查询效率, 同时也降低了 insert、update、delete 的效率")])])])]),t._v(" "),e("h3",{attrs:{id:"_3-14-2-索引的结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-14-2-索引的结构"}},[t._v("#")]),t._v(" 3.14.2.索引的结构")]),t._v(" "),e("p",[t._v("MySQL 数据库支持的索引结构有很多, 如: Hash 索引, B+Tree 索引, Full-Text 索引等. 我们平常所说的索引, 如果没有特别指明, 都是指默认的 B+Tree 结构组织的索引")]),t._v(" "),e("ul",[e("li",[t._v("B+Tree (多路平衡搜索树)")])]),t._v(" "),e("p",[e("img",{attrs:{src:_(414),alt:"B+Tree结构"}})]),t._v(" "),e("ul",[e("li",[t._v("特点\n"),e("ul",[e("li",[t._v("每一个节点可以存储多个 key (有 n 个key, 就有 n 个指针)")]),t._v(" "),e("li",[t._v("所有的数据都存储在叶子节点, 非叶子节点仅用于索引数据")]),t._v(" "),e("li",[t._v("叶子节点形成一颗双向链表, 便于数据的排序及区间范围查找")])])])]),t._v(" "),e("h3",{attrs:{id:"_3-14-3-索引的语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-14-3-索引的语法"}},[t._v("#")]),t._v(" 3.14.3.索引的语法")]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 创建索引\ncreate [ unique ] index 索引名 on 表名 (字段名1, ...);\n\n# 查看索引\nshow index from 表名;\n\n# 删除索引\ndrop index 索引名 on 表名;\n")])])]),e("ul",[e("li",[t._v("注意事项")])]),t._v(" "),e("blockquote",[e("p",[t._v("主键字段, 在建表时, 会自动创建主键索引\n添加唯一约束时, 数据库实际上会添加唯一索引")])]),t._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 创建: 为 tb_emp 表的 name 字段建立一个索引\ncreate index idx_emp_name on tb_emp(name);\n# 查询: tb_emp 表的索引信息\nshow index from tb_emp;\n# 删除: 删除 tb_emp 表中 name 字段索引\ndrop index idx_emp_name on tb_emp;\n")])])])])}),[],!1,null,null,null);e.default=v.exports}}]);