(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{736:function(n,t,r){"use strict";r.r(t);var a=r(29),e=Object(a.a)({},(function(){var n=this,t=n.$createElement,r=n._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("h1",{attrs:{id:"_4-nginx反向代理-静态资源服务"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-nginx反向代理-静态资源服务"}},[n._v("#")]),n._v(" 4.Nginx反向代理 静态资源服务")]),n._v(" "),r("h2",{attrs:{id:"nginx简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nginx简介"}},[n._v("#")]),n._v(" Nginx简介")]),n._v(" "),r("p",[n._v("Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。它是由俄罗斯人Igor Sysoev（伊戈尔·塞索耶夫）编写的。")]),n._v(" "),r("p",[n._v("Nginx是一款轻量级的Web 服务器，因它的稳定性、丰富的功能集、示例配置文件和低系统资源消耗而闻名。其特点是占用内存少，并发能力强，事实上Nginx的并发能力在同类型的web服务器中表现较好。")]),n._v(" "),r("p",[n._v("在国内，已经有百度、京东、新浪、网易、腾讯、淘宝等多家网站使用Nginx作为Web服务器或反向代理服务器。")]),n._v(" "),r("h2",{attrs:{id:"选择nginx的理由"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#选择nginx的理由"}},[n._v("#")]),n._v(" 选择Nginx的理由")]),n._v(" "),r("ul",[r("li",[n._v("高并发连接"),r("br"),n._v("\n官方测试Nginx能够支持5万并发连接，在实际生产环境中可支撑2-4万并发连接数。")]),n._v(" "),r("li",[n._v("消耗内存少"),r("br"),n._v("\n在同等硬件环境下，Nginx的处理能力相当于Apache的5-10倍。")]),n._v(" "),r("li",[n._v("成本低廉"),r("br"),n._v("\nNginx作为开源软件，可以免费使用，并且可用于商业用途。")]),n._v(" "),r("li",[n._v("其它理由\n配置文件非常简单\n支持Rewrite重写规则\n内置健康检查功能\n节省带宽\n稳定性高")])]),n._v(" "),r("h2",{attrs:{id:"nginx安装前准备"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nginx安装前准备"}},[n._v("#")]),n._v(" Nginx安装前准备")]),n._v(" "),r("p",[n._v("gcc编译器：用于官网源码进行编译，依赖于gcc环境。 "),r("br"),n._v("\n依赖模块：Nginx的一些模块需要第三方库支持。 "),r("br"),n._v("\n下载地址：http://nginx.org/en/download.html。")]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("yum -y install gcc gcc-c++ autoconf automake\n\nyum -y install zlib zlib-devel openssl openssl-devel pcre pcre-devel\n\nwget -O /tmp/nginx.tar.gz http://nginx.org/download/nginx-1.16.1.tar.gz   // -O 是大写的\n")])])]),r("h2",{attrs:{id:"nginx编译安装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nginx编译安装"}},[n._v("#")]),n._v(" Nginx编译安装")]),n._v(" "),r("div",{staticClass:"language-text extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("# 解压\ntar -zxvf /tmp/nginx.tar.gz\ncd /tmp/nginx-1.16.1/\n\n# 配置安装路径\n./configure --prefix=/usr/local/nginx\n# 编译\nmake\n# 安装\nmake install\n")])])]),r("p",[n._v("// 下边的操作是查看 nginx 是否安装成功 "),r("br"),n._v("\ncd /usr/local/nginx  "),r("br"),n._v("\ncd sbin/ "),r("br"),n._v("\n./nginx        //没有配置环境变量只能 ./nginx "),r("br"),n._v("\nps -ef | grep ngin   // 查看进程 "),r("br"),n._v("\n./nginx -s stop  // 停止 nginx")]),n._v(" "),r("ul",[r("li",[n._v("配置环境变量  为了能使用 nginx 命令 "),r("br"),n._v("\nvim /etc/profile  "),r("br"),n._v("\n// 在配置文件的最后进行配置环境变量  "),r("br"),n._v("\nNGINX_HOME=/usr/local/nginx    "),r("br"),n._v("\nexport PATH=$PATH:$NGINX_HOME/sbin\t  "),r("br")])]),n._v(" "),r("blockquote",[r("p",[n._v("usr 没有 e 的 "),r("br"),n._v("\n有的程序是 sbin 有的是 bin  "),r("br")])]),n._v(" "),r("p",[n._v("source /etc/profile    // 刷新环境变量  "),r("br")]),n._v(" "),r("blockquote",[r("p",[n._v("运行命令 nginx")])]),n._v(" "),r("ul",[r("li",[r("p",[n._v("端口配置\nfirewall-cmd --zone=public --list-ports  // 查看所有端口  "),r("br"),n._v("\nfirewall-cmd --zone=public --add-port=80/tcp    // 临时开放 80 端口 "),r("br"),n._v("\nfirewall-cmd --zone=public --add-port=80/tcp\t--permanent  // 永久开放 80 端口 "),r("br"),n._v("\n// 如果还是不行 需要进行 reload "),r("br"),n._v("\nfirewall-cmd --reload")])]),n._v(" "),r("li",[r("p",[n._v("修改 nginx 默认页")]),n._v(" "),r("p",[n._v("nginx 的默认页位置 "),r("br"),n._v('\n/usr/local/nginx/html 下的 index.html    // index.html 中需要设置字符集  <meta charset="utf-8" />')])]),n._v(" "),r("li",[r("p",[n._v("nginx 的相关操作命令\nnginx -s stop   // 直接找到进程关闭，很粗暴  "),r("br"),n._v("\nnginx -s quit   // 平缓关闭，不会接收新的请求 ，并且将当前的网络请求处理完之后，关闭  "),r("br"),n._v("\nnginx -s reload  // 重新加载配置文件  "),r("br"),n._v("\nnginx -t    \t\t\t // 检查默认配置文件  "),r("br"),n._v("\nnginx -t -c 路径   // 自己的配置文件  "),r("br")])]),n._v(" "),r("li",[r("p",[n._v("将 nginx 添加到 系统服务  TODO 没有配置完，需要看后期的课件  "),r("br"),n._v("\n添加之后可以使用  service nginx start 来启动 nginx "),r("br"),n._v("\ncd  /usr/lib/systemd/system "),r("br"),n._v("\nll || grep firewalld "),r("br")])])]),n._v(" "),r("p",[n._v("配置完之后就可以使用  systemctl 来启动服务  "),r("br"),n._v("\nsystemctl enable nginx   开机启动  "),r("br"),n._v("\nsystemctl disable fillwall  移除防火墙  "),r("br")]),n._v(" "),r("h2",{attrs:{id:"nginx配置与优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nginx配置与优化"}},[n._v("#")]),n._v(" Nginx配置与优化")]),n._v(" "),r("h3",{attrs:{id:"配置文件结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#配置文件结构"}},[n._v("#")]),n._v(" 配置文件结构")]),n._v(" "),r("ul",[r("li",[r("p",[r("strong",[n._v("配置文件位置")]),n._v(" "),r("br"),n._v("\ncd /usr/local/nginx/conf/ "),r("br"),n._v("\nvim nginx.conf")])]),n._v(" "),r("li",[r("p",[n._v("文件介绍\n分为三块: 全局区域, events区域,  http区域.")])])]),n._v(" "),r("ol",[r("li",[n._v("全局区域  "),r("br"),n._v("\n// 使用的用户和组 "),r("br"),n._v("\nusr nobody; "),r("br"),n._v("\n// 指定工作衍生的进程 "),r("br"),n._v("\nworker_precess 1; "),r("br"),n._v("\n// 指定错误日志的存放路径 "),r("br"),n._v("\nerror_log logs/error.log; "),r("br"),n._v("\n// pid 位置 "),r("br"),n._v("\npid  logs/nginx.pid;")])]),n._v(" "),r("p",[n._v("vim /usr/local/nginx/logs/nginx.pid")]),n._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[n._v("events区域 "),r("br"),n._v("\n可以指定我们使用的 io 模型 "),r("br")]),n._v(" "),r("li",[n._v("http 区域 "),r("br"),n._v("\nhttp 里有 server 区域， 是对主机的设置。一个虚拟主机就是一个 server 块。 "),r("br")])]),n._v(" "),r("h3",{attrs:{id:"虚拟主机配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#虚拟主机配置"}},[n._v("#")]),n._v(" 虚拟主机配置")]),n._v(" "),r("p",[n._v("在 http 内进行配置")]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("// 以后买的域名绑定到网站上就是在这配置\nserver {\n\t// 端口\n\tlisten 80;\n\t// 主机名\n\tserver_name  aaa.domain.com;\n\t// 访问日志的存放路径     combined 是log 默认的格式\n\taccess_log   logs/aaa.domain.com.access.log combined;     // 或者\n\taccess_log   logs/aaa.domain.com.access.log mylogformat;    // mylogformat 是自己定义的格式\n\tlocation / {\n\t\tindex  index.html  index.php;\n\t\troot   /data/htdocs/aaa.domain.com;\n\t}\n}\n")])])]),r("p",[n._v("mkdir -p /data/htdocs/aaa.domain.com  "),r("br"),n._v("\nvim index.html  "),r("br"),n._v("\n在 hosts 文件中配置 域名  "),r("br"),n._v("\n192.168.2.179 aaa.domain.com")]),n._v(" "),r("h3",{attrs:{id:"日志配置与切割"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#日志配置与切割"}},[n._v("#")]),n._v(" 日志配置与切割")]),n._v(" "),r("ul",[r("li",[n._v("日志配置   "),r("br"),n._v("\n可以放在 http 中 也可以放在 server中，http表示所有虚拟主机的， server表示单个的。\t   "),r("br"),n._v("\nlog_format mylogformat '$http_x_forward_for - $remote_user [$time_local]';  // 定义打印格式  "),r("br")])]),n._v(" "),r("p",[n._v("tail -f /usr/local/nginx/logs/aaa.domian.com.access.log   // 实时刷新  "),r("br"),n._v("\n没有反应，主动结束进程试试看  "),r("br"),n._v("\nkill -USER1 '/usr/local/nginx/logs/nginx.pid'  "),r("br"),n._v("\nkill -USER1 'cat /usr/local/nginx/logs/nginx.pid'  "),r("br"),n._v("\nps -ef | grep nginx => kill -USER1 16633 // ps 查到的  "),r("br")]),n._v(" "),r("ul",[r("li",[n._v("切割")])]),n._v(" "),r("h3",{attrs:{id:"压缩输出配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#压缩输出配置"}},[n._v("#")]),n._v(" 压缩输出配置")]),n._v(" "),r("p",[n._v("在 gzip on 的位置配置  "),r("br"),n._v("\ngzip  on;  // 开启 gzip  "),r("br"),n._v("\ngzip_min_length 1k;  // 最小长度  "),r("br"),n._v("\ngzip_buffers 4 16K;  "),r("br"),n._v("\ngzip_http-version 1.1;  "),r("br"),n._v("\ngzip_comp_level 2;  //编译等级  "),r("br"),n._v("\ngzip_types text/plain application/x-javas text/css application/xml  "),r("br"),n._v("\ngzip_vary on;  "),r("br")]),n._v(" "),r("h2",{attrs:{id:"rewrite重写"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rewrite重写"}},[n._v("#")]),n._v(" Rewrite重写")]),n._v(" "),r("p",[n._v("Rewrite主要功能就是实现URL重写。 "),r("br"),n._v("\n通过Rewrite规则，可以实现规范的URL。 "),r("br")]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("server{\n\tlocation / {\n\t\trewrite ^(.*).htmp$ /rewrite.html;\n\t}\t\n}\n\n")])])]),r("h2",{attrs:{id:"反向代理及负载均衡"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#反向代理及负载均衡"}},[n._v("#")]),n._v(" 反向代理及负载均衡")]),n._v(" "),r("p",[n._v("正向代理代理客户端，反向代理代理服务端")]),n._v(" "),r("h3",{attrs:{id:"反向代理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#反向代理"}},[n._v("#")]),n._v(" 反向代理")]),n._v(" "),r("p",[n._v("指以代理服务器来接收Internet上的连接请求，然后将请求转发给网络上的服务器，并将从该服务器得到的结果返回给Internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器。")]),n._v(" "),r("ol",[r("li",[n._v("在 http 中进行配置")])]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("server {\n\t// 端口\n\tlisten 80;\n\t// 主机名\n\tserver_name daili.com;\n\tlocation / {\n\t\tproxy_pass http://${ip}:8080;  // proxy_pass 域名，没有ssh 只能访问 http 的网站\n\t\tindex index.html index.php;\n\t}\n}\n")])])]),r("ol",{attrs:{start:"2"}},[r("li",[n._v("配置域名\nip  daili.com")])]),n._v(" "),r("h3",{attrs:{id:"负载均衡"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[n._v("#")]),n._v(" 负载均衡")]),n._v(" "),r("p",[n._v("由多台服务器以对称的方式组成一个服务器集合，每台服务器都具有等价的地位，都可以单独对外提供服务而无需其它服务器的辅助。")]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("// 全局\nupstream myserver1 {\n\tserver 192.168.2.114:8080;\n}\nupstream myserver2 {\n\tserver 192.168.2.114:8081;\n}\nupstream myserver {\n\tserver 192.168.2.114:8080;\n\tserver 192.168.2.114:8081;\n}\n\nserver {\n\t// 端口\n\tlisten 80;\n\t// 主机名\n\tserver_name daili.com;\n\tlocation / {\n\t\tproxy_pass http://myserver;\n\t\tindex index.html index.php;\n\t}\n}\n")])])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("server {\n\t// 端口\n\tlisten 80;\n\t// 主机名\n\tserver_name daili.com;\n\tlocation / {\n\t\tproxy_pass http://myserver;\n\t\tindex index.html index.php;\n\t}\n\tlocation ~ \\.php$ s{\n\t\tfastcgi 127.0.0.1:9000;   // fpm\n\t}\n}\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);