(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{565:function(t,s,a){t.exports=a.p+"assets/img/13.1.31e68ec4.png"},566:function(t,s,a){t.exports=a.p+"assets/img/13.2.92fd5311.png"},567:function(t,s,a){t.exports=a.p+"assets/img/13.3.a03b5130.png"},568:function(t,s,a){t.exports=a.p+"assets/img/13.4.e106d4fd.png"},569:function(t,s,a){t.exports=a.p+"assets/img/13.5.671c0631.png"},914:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_13-shell条件测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-shell条件测试"}},[t._v("#")]),t._v(" 13.shell条件测试")]),t._v(" "),s("h2",{attrs:{id:"_13-1-read"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-read"}},[t._v("#")]),t._v(" 13.1.read")]),t._v(" "),s("p",[t._v("shell 变量除了直接赋值 或者传入变量，还有就是 read 命令读取")]),t._v(" "),s("p",[t._v("read 也是内置命令")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('-p 设置提示信息\n-t 等待用户输入超时，timeout\nread -p "请输入：" vars\n')])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('[root@VM-0-4-centos ~]# read -t 15 -p "请你输入你的名字， 年龄：" your_name your_age\n请你输入你的名字， 年龄：zs 18\n[root@VM-0-4-centos ~]# echo $your_name $your_age\nzs 18\n[root@VM-0-4-centos ~]# \n')])])]),s("h2",{attrs:{id:"_13-2-条件测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-条件测试"}},[t._v("#")]),t._v(" 13.2.条件测试")]),t._v(" "),s("p",[t._v("得到真假的概念")]),t._v(" "),s("h3",{attrs:{id:"_13-2-1-shell提供条件测试语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-1-shell提供条件测试语句"}},[t._v("#")]),t._v(" 13.2.1.shell提供条件测试语句")]),t._v(" "),s("p",[s("img",{attrs:{src:a(565),alt:"条件测试语句"}})]),t._v(" "),s("ol",[s("li",[t._v("test命令")])]),t._v(" "),s("p",[t._v("test命令评估一个表达式，它的结果是真，还是假，如果条件为真，那么命令执行的状态码结果就为0，否则不为0，通过 $? 取值")]),t._v(" "),s("blockquote",[s("p",[t._v("真为 0， 假为 1")])]),t._v(" "),s("ul",[s("li",[t._v("test语法参数大全")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("-e 该文件是否存在，（普通文件，目录），存在就为真，否则为假（常用）\n-f 该文件名是否为文件（file）（常用）\n-d 该文件名是否为目录（directory）（常用）\n-b 该文件名是否为一个 block device 装置\n-c 该文件名是否为一个 character device 装置\n-s 该文件名是否为一个 Socket 文件\n-p 该文件名是否为一个 FIFO(pipe) 文件\n-p 该文件名是否为一个 连结档\n\n# 关于文件的权限侦测，如 test -r filename\n-r 侦测该文件是否具有 可读 属性\n-w 侦测该文件是否具有 可写 属性\n-x 侦测该文件是否具有 可执行 属性\n-u 侦测该文件是否具有 SUID 属性\n-g 侦测该文件是否具有 SGID 属性\n-k 侦测该文件是否具有 Sticky bit 属性\n-s 侦测该文件是否为 非空白文件\n \n# 两个文件之间的比较 如： test file1 -nt file2\n-nt (newer than) 判断 file1 是否比 file2 新\n-ot (older than) 判断 file1 是否比 file2 旧\n-ef 判断 file2 与 file2 是否为同一个文件，可用在判断 hard link 的判定上。主要意义在判定，两个文件是否均指向同一个 inode \n\n# 关于两个整数之间的判定(针对变量数值大小比较判断)，如 test n1 -eq n2\n-eq 两数值相等 (equal)\n-ne 两数值不等 (not equal)\n-gt n1 大于 n2 (greater than)\n-lt n1 小于 n2 (less than)\n-ge n1 大于等于 n2 (greater than or equal)\n-le n1 小于等于 n2 (less than or equal)\n\n# 判定字符串的数据\ntest -z string 判定字符串是否为 0 (判断字符串为空) ？ 若 string 为空字符串，则为 true\ntest -n string 判定字符串是否为 0 (判断字符串不为空) ？ 若 string 为空字符串，则为 false\n注：-n 亦可省略\ntest str1 = str2 判断 str1 是否等于 str2，若相等，则回传 true\ntest str1 != str2 判断 str1 是否不等于 str2，若相等，则回传 false\n\n# 多重条件判断，例如： test -r filename -a -x filename\n-a (and) 两状况同时成立！例如 test -r file -a -x file, 则 file 同时具有 r 与 x 权限时，才回传 true\n-o (or) 两状况任意一个成立！例如 test -r file -o -x file, 则 file 具有 r 或 x 权限时，就可回传 true\n！ 反向状态， 如 test ! -x file, 当 file 不具有 x 时，回传 true\n")])])]),s("ul",[s("li",[t._v("简单演示")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@VM-0-4-centos /]# test -e hello.py\n[root@VM-0-4-centos /]# echo $?\n1\n[root@VM-0-4-centos /]# ls\napp  boot  dev  home  lib64       media  mydata  proc  run   srv  tmp  var\nbin  data  etc  lib   lost+found  mnt    opt     root  sbin  sys  usr\n[root@VM-0-4-centos /]# test -e home\n[root@VM-0-4-centos /]# echo $?\n0\n")])])]),s("ul",[s("li",[t._v("test 命令实践")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# -e\n[root@VM-0-4-centos tmp]# test -e heihei.txt && echo "这个嘿嘿文件已存在" || echo "这个嘿嘿文件不存在"\n这个嘿嘿文件不存在\n[root@VM-0-4-centos tmp]# test -e heihei.txt && echo "这个嘿嘿文件已存在" || touch heihei.txt\n[root@VM-0-4-centos tmp]# test -e heihei.txt && echo "这个嘿嘿文件已存在" || touch heihei.txt\n这个嘿嘿文件已存在\n[root@VM-0-4-centos tmp]# \n\n# -f\n[root@VM-0-4-centos tmp]# test -f happy && echo ok || echo no\nno\n[root@VM-0-4-centos tmp]# \n\n# -d\n[root@VM-0-4-centos tmp]# test -d happy && echo ok || echo no\nno\n[root@VM-0-4-centos tmp]# \n\n# -z\n')])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("中括号")])]),t._v(" "),s("p",[t._v("脚本中经常进行条件测试， 用的最多的，都是中括号 []")]),t._v(" "),s("p",[t._v("test 和 [] 作用是一样的")]),t._v(" "),s("blockquote",[s("p",[t._v("注意的点： 中括号，前后的空格必须有\n在条件测试中使用变量，必须添加双引号")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# -f\n[root@VM-0-4-centos tmp]# touch happy.txt\n[root@VM-0-4-centos tmp]# file1="happy.txt"\n[root@VM-0-4-centos tmp]# [ -f "$file1" ] && echo ok || echo no\nok\n[root@VM-0-4-centos tmp]# rm happy.txt\nrm：是否删除普通空文件 "happy.txt"？y\n[root@VM-0-4-centos tmp]# [ -f "${file1}" ] && echo ok || echo no\nno\n[root@VM-0-4-centos tmp]# \n\n# -d\n[ -d dir_name ]\n')])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("双中括号")])]),t._v(" "),s("p",[t._v("和 中括号 类似")]),t._v(" "),s("blockquote",[s("p",[t._v("系统脚本 /etc/init.d/")])]),t._v(" "),s("h3",{attrs:{id:"_13-2-2-字符串比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-2-字符串比较"}},[t._v("#")]),t._v(" 13.2.2.字符串比较")]),t._v(" "),s("p",[s("img",{attrs:{src:a(566),alt:"字符串比较"}})]),t._v(" "),s("blockquote",[s("p",[t._v('对于字符串变量的比较，一定要给变量添加双引号 "$name"\n等于号左右两边也需要有空格')])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('MacBook-Pro-7:~ j$ name=zs\nMacBook-Pro-7:~ j$ [ "$name" = "zs"  ]\nMacBook-Pro-7:~ j$ echo $?\n0\n\nMacBook-Pro-7:~ j$ [ -f "Music"  ]\nMacBook-Pro-7:~ j$ echo $?\n1\nMacBook-Pro-7:~ j$ [ !  -f "Music"  ]\nMacBook-Pro-7:~ j$ echo $?\n0\n')])])]),s("h3",{attrs:{id:"_13-2-3-shell数值比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-3-shell数值比较"}},[t._v("#")]),t._v(" 13.2.3.shell数值比较")]),t._v(" "),s("p",[s("img",{attrs:{src:a(567),alt:"shell数值比较"}})]),t._v(" "),s("ol",[s("li",[t._v("在中括号中，以及 test 中数值测试的用法")])]),t._v(" "),s("blockquote",[s("p",[t._v("中括号中，使用数学比较符号，请添加转译符号 比如 >， != 不用加反斜杠")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('MacBook-Pro-7:~ j$ [ 2 > 1 ] && echo yes || echo no\nyes\nMacBook-Pro-7:~ j$ [ 1 > 2 ] && echo yes || echo no\nyes\nMacBook-Pro-7:~ j$ [ 1 \\> 2 ] && echo yes || echo no\nno\nMacBook-Pro-7:~ j$ [ 1 -ge 2 ] && echo yes || echo no\nno\nMacBook-Pro-7:~ j$ test "$n1" -eq "$n2" && echo yes || echo no\nno\nMacBook-Pro-7:~ j$ test "$n1" -lt "$n2" && echo yes || echo no\nyes\nMacBook-Pro-7:~ j$ test "$n1" !=  "$n2" && echo yes || echo no\nyes\nMacBook-Pro-7:~ j$ test "$n1" =  "$n2" && echo yes || echo no\nno\n')])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("双中括号")])]),t._v(" "),s("blockquote",[s("p",[t._v("对单括号的补充，双括号还支持正则处理\n在双括号中， 就不要转译符号了")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("MacBook-Pro-7:~ j$ [[ 5 > 6 ]] && echo yes || echo no\nno\nMacBook-Pro-7:~ j$ [[ 5 < 6 ]] && echo yes || echo no\nyes\nMacBook-Pro-7:~ j$ [[ 5 = 6 ]] && echo yes || echo no\nno\nMacBook-Pro-7:~ j$ [[ 5 != 6 ]] && echo yes || echo no\nyes\nMacBook-Pro-7:~ j$ \nMacBook-Pro-7:~ j$ [[ 5 -lt 6 ]] && echo yes || echo no\nyes\n")])])]),s("h2",{attrs:{id:"_13-3-逻辑操作符号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-3-逻辑操作符号"}},[t._v("#")]),t._v(" 13.3.逻辑操作符号")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("&& -a     与 运算， 两边都为真，结果为真\n|| -o     或 运算， 两边有一个为真，结果为真\n")])])]),s("p",[s("img",{attrs:{src:a(568),alt:"逻辑操作符号"}})]),t._v(" "),s("h3",{attrs:{id:"_13-3-1-实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-3-1-实践"}},[t._v("#")]),t._v(" 13.3.1.实践")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('[root@VM-0-4-centos ~]# [ -f "$file1" -a -f "$file2" ] && echo yes || echo no\nyes\n[root@VM-0-4-centos ~]# \n[root@VM-0-4-centos ~]# a="";b="zs"\n[root@VM-0-4-centos ~]# test -n "$a" && echo yes || echo no\nno\n[root@VM-0-4-centos ~]# test -n "$b" && echo yes || echo no\nyes\n[root@VM-0-4-centos ~]# [[ -n "$a" && "$a" = "$b"  ]] && echo yes || echo no\nno\n[root@VM-0-4-centos ~]# a="zs"\n[root@VM-0-4-centos ~]# [[ -n "$a" && "$a" = "$b"  ]] && echo yes || echo no\nyes\n[root@VM-0-4-centos ~]# a="ls"\n[root@VM-0-4-centos ~]# [[ -n "$a" && "$a" = "$b"  ]] && echo yes || echo no\nno\n[root@VM-0-4-centos ~]# [[ -n "$a" && ! "$a" = "$b"  ]] && echo yes || echo no\nyes\n[root@VM-0-4-centos ~]# [[ -n "$a" && "$a" != "$b"  ]] && echo yes || echo no\nyes\n')])])]),s("h2",{attrs:{id:"_13-4-逻辑运算脚本开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-4-逻辑运算脚本开发"}},[t._v("#")]),t._v(" 13.4.逻辑运算脚本开发")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Please input a number: "')]),t._v(" var1\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$var1")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-eq")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"输入了一个1"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$var1")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-eq")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"输入了一个2"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$var1")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ne")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$var1")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ne")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"输入了1或者2"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("最常用的就是 中括号，搭配 -gt -lt 如此用法即可")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[ $a -gt $b ]\n")])])]),s("p",[s("img",{attrs:{src:a(569),alt:"测试表达式符号"}})]),t._v(" "),s("h3",{attrs:{id:"_13-4-1-实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-4-1-实践"}},[t._v("#")]),t._v(" 13.4.1.实践")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/shell-program/test_scripts/\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$path")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("END\n  1.:[install lamp]\n  2.:[install lnmp]\n  3.:[exit]\n  pls input the num you want:\nEND")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" num\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),t._v(" + "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&>")]),t._v(" /dev/null\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ne")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Ten num must is {1|2|3}"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-eq")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"start installing ... lamp"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断是否有可执行权限，有就执行，没有提示")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# [ -x "$path/lamp.sh"  ] || {')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   echo "The file is error..."')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   exit 1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# }")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $path/lamp.sh")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行脚本，直接运行不好么？？？")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$path")]),t._v("/lamp.sh\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-eq")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"start installing ... lnmp"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断是否有可执行权限，有就执行，没有提示")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# [ -x "$path/lnmp.sh"  ] || {')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   echo "The file is error..."')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   exit 1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# }")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $path/lnmp.sh")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行脚本，直接运行不好么？？？")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$path")]),t._v("/lnmp.sh\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-eq")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"byebye"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);