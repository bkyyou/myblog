(window.webpackJsonp=window.webpackJsonp||[]).push([[201],{762:function(s,t,e){"use strict";e.r(t);var r=e(29),_=Object(r.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"_3-git-merge-一个指定文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-git-merge-一个指定文件"}},[s._v("#")]),s._v(" 3.git merge 一个指定文件")]),s._v(" "),e("p",[s._v("git里面的merge是全merge ，没有单个文件merge。")]),s._v(" "),e("p",[s._v("要实现一个文件的merge ，可以使用git checkout 这个命令")]),s._v(" "),e("p",[s._v("git checkout xxxx（分支名）  xxxx（文件名）")]),s._v(" "),e("div",{staticClass:"language-s extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 测试\ngit checkout bikeyou ss80_yy ss80_sx ss80_yw\nerror: pathspec 'ss80_yy' did not match any file(s) known to git\nerror: pathspec 'ss80_sx' did not match any file(s) known to git\nerror: pathspec 'ss80_yw' did not match any file(s) known to git\n\ngit checkout bikeyou src/ss80_yy src/ss80_sx src/ss80_yw src/xzk80_yy src/xzk80_sx src/xzk80_yw src/bsp80_yy src/bsp80_sx src/bsp80_yw \nUpdated 9 paths from de41e1b\n")])])]),e("p",[s._v("这个命令是覆盖的意思，是说把另一个分支的文件覆盖到当前的分支上，")]),s._v(" "),e("p",[s._v("所有，最好不要在master上面操作，可以建立一个临时的分支，然后，commit。")]),s._v(" "),e("p",[s._v("在merge到master分支上，这样就实现了单个文件的merge。")]),s._v(" "),e("p",[s._v("当然，这个功能还有一个作用，就是文件的回退，例如你改了这个文件，")]),s._v(" "),e("p",[s._v("然后你想变回和服务器一样的文件，那么你可以用下面的命令。")]),s._v(" "),e("p",[s._v("git checkout HEAD  xxxx（文件名）")]),s._v(" "),e("p",[s._v("就会回退到服务器的版本文件一直，也是覆盖功能，就是把服务器的文件取下来，覆盖到本地了。")]),s._v(" "),e("p",[s._v("git是用HEAD这个指针来控制文件的。")]),s._v(" "),e("p",[s._v("————————————————\n原文链接：https://blog.csdn.net/wanda000/article/details/104618988")])])}),[],!1,null,null,null);t.default=_.exports}}]);