(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{491:function(e,t,a){e.exports=a.p+"assets/img/7.1.c867191e.png"},738:function(e,t,a){"use strict";a.r(t);var s=a(29),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"_7-mysql入门与应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-mysql入门与应用"}},[e._v("#")]),e._v(" 7.MySQL入门与应用")]),e._v(" "),s("p",[e._v("MySQL 是目前最流行的关系型数据库管理系统之一，在web应用方面，MySQL是最好的关系型数据库管理软件之一。")]),e._v(" "),s("p",[e._v("关系型数据库是将数据保存在不同的表中，使用SQL语言作为访问数据库的标准语言。MySQL采用了双授权政策，分为社区版和商业版，由于体积小、速度快、总体拥有成本低，一些中小型网站都选择MySQL作为网站数据库。")]),e._v(" "),s("h2",{attrs:{id:"mysql安装与配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql安装与配置"}},[e._v("#")]),e._v(" MySQL安装与配置")]),e._v(" "),s("h3",{attrs:{id:"官方yum源安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#官方yum源安装"}},[e._v("#")]),e._v(" 官方yum源安装")]),e._v(" "),s("ol",[s("li",[e._v("下载官网yum源")]),e._v(" "),s("li",[e._v("yum install –y mysql-community-server")])]),e._v(" "),s("p",[e._v("mysql官网:  https://dev.mysql.com/downloads/   "),s("br"),e._v("\nhttps://dev.mysql.com/downloads/   => Mysql Yum Repository => Red Hat Enterprise Linux 7 / Oracle Linux 7")]),e._v(" "),s("p",[e._v("使用清华大学开源软件镜像站  "),s("br"),e._v("\nhttps://mirror.tuna.tsinghua.edu.cn/help/mysql/")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 具体安装步骤\n\n1.新建 /etc/yum.repos.d/mysql-community.repo => 看镜像站提示配置源文件\n2.yum search mysql-community-server\n3.yum install –y mysql-community-server\n\n// 这里下载是因为 配置 文件中相对路径的文件找不到\n4.wget http://repo.mysql.com/RPM-GPG-KEY-mysql -O /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\n5.yum install –y mysql-community-server\n")])])]),s("blockquote",[s("p",[e._v("解决 Retrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql 的问题 https://blog.csdn.net/lcyaiym/article/details/77282336")])]),e._v(" "),s("h3",{attrs:{id:"镜像站下载离线安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#镜像站下载离线安装"}},[e._v("#")]),e._v(" 镜像站下载离线安装")]),e._v(" "),s("ol",[s("li",[e._v("找到镜像文件 "),s("br")]),e._v(" "),s("li",[e._v("wget 下载  "),s("br")]),e._v(" "),s("li",[e._v("rpm 离线安装  "),s("br")]),e._v(" "),s("li",[e._v("基础配置  "),s("br")])]),e._v(" "),s("p",[e._v("http://mirrors.163.com/mysql/Downloads/MySQL-8.0/  => 查找 bundle => mysql-8.0.17-1.el6.x86_64.rpm-bundle.tar")]),e._v(" "),s("p",[s("img",{attrs:{src:a(491),alt:"需要下载的文件"}}),e._v("\nyum list installed | grep openssl "),s("br"),e._v("\nyum list installed | grep liaio "),s("br"),e._v("\nyum list installed | grep perl "),s("br"),e._v("\nsetenforce=0")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 永久更改 sentenforce=0 的配置文件\nvim /etc/selinux/config\n\n// 文件设置\n// SELINUX=enforcing 改成\nSELINUX=disabled\n// 改完之后需要重启服务\n")])])]),s("p",[e._v("rpm -ivh mysql-community-common-8.0.19-1.el7.x86_64.rpm "),s("br"),e._v("\nrpm -ivh mysql-community-libs-8.0.19-1.e17.x86_64.rpm "),s("br"),e._v("\nrpm -ivh mysql-community-client-8.0.19-1.e17.x86_64.rpm "),s("br"),e._v("\nrpm -ivh mysql-community-server-8.0.19-1.e17.x86_64.rpm "),s("br")]),e._v(" "),s("blockquote",[s("p",[e._v("MySQL官网放在国外服务器，所以下载速度非常慢，推荐使用国内镜像离线安装")])]),e._v(" "),s("h3",{attrs:{id:"使用-mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-mysql"}},[e._v("#")]),e._v(" 使用 mysql")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("mysql -uroot -p   // 登录 mysql\n// 登录 mysql 需要密码\ngrep password /var/log/mysqld.log  // 得到密码  sb:-tN_uj9rJ\nmysql -uroot -psb:-tN_uj9rJ  或者 mysql -uroot -p 回车之后输入密码 \nshow databases;\n// 此时会提示先重置密码\nalter user user() identified by '123abcA.';\nmysql -uroot -p123abcA.   // 进入客户端\n\nselect Host,user from mysql.user where user='root';   // 想要远程登录测试一下，看到 localhost \troot，表示只不能远程登陆\nupdate mysql.user set Host='%' where user='root';   // TODO 还可改成 什么 安全性更高？？？\n\n// 之后远程登录\nmysql -h192.168.2.186\t-uroot -p\n// 输入密码后可能还登不进去，需要采用 mysql -uroot -p 重新进入客户端\nflush privileges;\nmysql -h192.168.2.186\t-uroot -p\n")])])]),s("p",[e._v("用 navicat 连接 mysql")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("1. 点击连接\n2. 正常输入\n3. 点击确定之后可能会连不上去，此时可能的原因的是端口，或者是密码的校验规则\n\t修改密码的校验规则   // **此时都在 MySQL 的客户端里**\n\t1. 卸载文件\n\t\tselect * from mysql.component;   //查找文件\n\t\tuninstall component 'file//component_vaildate_password';   // 这个本地路径是通过上面的 查找文件的命令找出来的 \n\t2. alter user 'root'@'%' identified with mysql_native_password by 'root';  // 此时 mysql 密码修改成 root\n")])])]),s("blockquote",[s("p",[e._v("在 mysql 中 写完命令之后需要 加  ; (分号) 结尾")])]),e._v(" "),s("h3",{attrs:{id:"配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[e._v("#")]),e._v(" 配置文件")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("位置 "),s("br"),e._v("\n/etc/my.cnf")])]),e._v(" "),s("li",[s("p",[e._v("配置文件里面的内容")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 数据目录\ndatadir=/var/lib/mysql\n// socket 文件目录\nsocket=/var/lib/mysql/mysql.sock\n// error_log 日志路径\nlog-error=/var/log/mysqld.log\n// 进程号保存文件\npid-file=/var/run/mysqld/mysqld.pid\n")])])]),s("h2",{attrs:{id:"mysql基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql基本概念"}},[e._v("#")]),e._v(" MySQL基本概念")]),e._v(" "),s("h3",{attrs:{id:"结构化查询语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构化查询语言"}},[e._v("#")]),e._v(" 结构化查询语言")]),e._v(" "),s("p",[e._v("结构化查询语言（Structured Query Language）简称：SQL,是一种特殊目的的编程语言，是数据库查询与程序设计语言，用于存取数据以及查询、更新和管理关系型数据库，同时也是数据库脚本文件的扩展名。")]),e._v(" "),s("h3",{attrs:{id:"sql语言分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql语言分类"}},[e._v("#")]),e._v(" SQL语言分类")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("数据查询（DQL）"),s("br"),e._v("\n数据检索语句，用以从表中获取数据，select是DQL用的最多的关键字，其它还包括 where 、order by 、group by 、having")])]),e._v(" "),s("li",[s("p",[e._v("数据操作（DML） "),s("br"),e._v("\n关键字：insert 、updata、delete，分别用于插入、修改以及删除表中的行。")])]),e._v(" "),s("li",[s("p",[e._v("事务处理（TPL）"),s("br"),e._v("\n确保被DML语句影响的表的所有行为得以更新。TPL语句包含begin transaction、commit、rollback。")])]),e._v(" "),s("li",[s("p",[e._v("数据控制（DCL） "),s("br"),e._v("\n通过grant或者revoke获得许可，确定单个用户和用户组对数据库对象的访问。")])]),e._v(" "),s("li",[s("p",[e._v("数据定义（DDL） "),s("br"),e._v("\n关键字：create和drop。在数据库中创建新表或者删除表，以及为表加入索引等。")])]),e._v(" "),s("li",[s("p",[e._v("指针控制（CCL） "),s("br"),e._v("\ndeclare cursor（声明游标）、fetch into（进入）和update where current（更新当前位置）用于对一个或者多个表单独行的操作。")])])]),e._v(" "),s("h3",{attrs:{id:"命令行连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令行连接"}},[e._v("#")]),e._v(" 命令行连接")]),e._v(" "),s("p",[e._v("mysql [options] [database]")]),e._v(" "),s("ol",[s("li",[e._v("-u，-user=username\t\t\t\t"),s("br"),e._v("\n用户名，默认root")]),e._v(" "),s("li",[e._v("-h，-host=hostname\t\t\t\t"),s("br"),e._v("\n远程主机，默认为localhost")]),e._v(" "),s("li",[e._v("-p，-password[=password]\t\t"),s("br"),e._v("\n密码，默认为空，一般不建议明文")]),e._v(" "),s("li",[e._v("-P，-port=3306\t\t\t\t\t"),s("br"),e._v("\n监听端口，默认为3306/tcp")]),e._v(" "),s("li",[e._v("-D，-database=database\t\t\t"),s("br"),e._v("\n连接到服务器后指明默认数据库")]),e._v(" "),s("li",[e._v("-e，-execute='sql statement'\t\t"),s("br"),e._v("\n连接到服务器后执行命令后直接返回")])]),e._v(" "),s("h3",{attrs:{id:"连接数据库的几种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接数据库的几种方式"}},[e._v("#")]),e._v(" 连接数据库的几种方式")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("mysql --host=192.168.31.115 --user=root --password=root;\n\nmysql -h192.168.31.115 -uroot -proot -P3306 -Dmysql\n\nmysql -h192.168.31.115 -uroot -proot -P3306 -Dmysql -e 'show databases;'  // 执行完会直接退出\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 查询当前正在使用的数据库名称\nselect database();\n\n// 查找命令\nhelp;\n\n// 设置默认数据库的名称\n\\u database 名称\n\n// 退出\n\\q\n\n// 结束标记\n\\g \n\n// 格式化当前数据   select * from mysql.user\\G\n\\G\n\n// 获取当前数据库状态的信息\n\\S\n\n// 可以执行 shell 命令      \\! echo 'hello';   \\! ps -ef | grep mysql\n\\! \n\n// 查看 MySQL 的语法文档\nhelp contents;  // 查到之后 help data types;\n\nselect user();\n\n// 选择数据库\nuse mysql;\n\n// 显示当前数据库\nselect mysql;  \n\n// 显示支持的引擎\nshow engines;\n\n// mysql 数据支持的 chartset\nshow chartset;\n")])])]),s("h3",{attrs:{id:"数据类型-字符型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型-字符型"}},[e._v("#")]),e._v(" 数据类型 - 字符型")]),e._v(" "),s("ul",[s("li",[e._v("定长字符")])]),e._v(" "),s("ol",[s("li",[e._v("char\t\t\t不区分大小写 "),s("br"),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("id char(10)  // 定义十位， 存进的数据不够十位，就空格补齐\n")])])])]),e._v(" "),s("li",[e._v("binary\t\t\t二进制数据流，区分大小写")])]),e._v(" "),s("ul",[s("li",[e._v("变长字符")])]),e._v(" "),s("ol",[s("li",[e._v("varchar\t\t\t\t不区分大小写 （如果定义的是 255 字符，存入数据不够 255 字符，则不会补齐） "),s("br")]),e._v(" "),s("li",[e._v("varbinary\t\t\t二进制数据流，可用于存储图片、音乐、短视频")])]),e._v(" "),s("blockquote",[s("p",[e._v("可以在 node 中 下载 mysql")])]),e._v(" "),s("h3",{attrs:{id:"数据类型-字符型-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型-字符型-2"}},[e._v("#")]),e._v(" 数据类型 - 字符型")]),e._v(" "),s("ul",[s("li",[e._v("对象存储")])]),e._v(" "),s("ol",[s("li",[e._v("text、tinytext、smalltext、mediumtext、longtext "),s("br")]),e._v(" "),s("li",[e._v("blob、tinyblob、smallblob、mediumblob、longblob")])]),e._v(" "),s("ul",[s("li",[e._v("内置类型")])]),e._v(" "),s("ol",[s("li",[e._v("enum\t\t单选字符串，适合存储表单界面中的“单选值” "),s("br")]),e._v(" "),s("li",[e._v("set\t\t\t多选字符串，适合存储表单界面中的“多选值”")])]),e._v(" "),s("h3",{attrs:{id:"数据类型-数值型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型-数值型"}},[e._v("#")]),e._v(" 数据类型-数值型")]),e._v(" "),s("ul",[s("li",[e._v("精确数值")])]),e._v(" "),s("ol",[s("li",[e._v("tinyint、smallint、mediumint、int/integer、bigint "),s("br")]),e._v(" "),s("li",[e._v("decimal(定点数)  // 128 位")])]),e._v(" "),s("blockquote",[s("p",[e._v("对于钱来说 小数 采用 decimal")])]),e._v(" "),s("ul",[s("li",[e._v("近似值")])]),e._v(" "),s("ol",[s("li",[e._v("float、double、")])]),e._v(" "),s("blockquote",[s("p",[e._v("能用 double 别用 float")])]),e._v(" "),s("h3",{attrs:{id:"数据类型-日期时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型-日期时间"}},[e._v("#")]),e._v(" 数据类型 - 日期时间")]),e._v(" "),s("ul",[s("li",[e._v("date(YYYY-MM-DD)              "),s("br")]),e._v(" "),s("li",[e._v("time(HH:mm:ss)             "),s("br")]),e._v(" "),s("li",[e._v("year(YYYY)             "),s("br")]),e._v(" "),s("li",[e._v("datetime(YYYY-MM-DD HH:mm:ss)    // 本地时间 ， 默认事件 null   ， 八个字节 ， 直接插入，   "),s("br")]),e._v(" "),s("li",[e._v("timestamp(时间戳)       // 和时区有关 默认 当前系统时间 ， 四个字节 ，转换成 utc（世界） 时间，1970 - 2038年    "),s("br")])]),e._v(" "),s("h2",{attrs:{id:"数据库操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库操作"}},[e._v("#")]),e._v(" 数据库操作")]),e._v(" "),s("h3",{attrs:{id:"数据库管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库管理"}},[e._v("#")]),e._v(" 数据库管理")]),e._v(" "),s("ul",[s("li",[e._v("创建数据库    "),s("br")]),e._v(" "),s("li",[e._v("修改数据库    "),s("br")]),e._v(" "),s("li",[e._v("删除数据库    "),s("br")]),e._v(" "),s("li",[e._v("查看/切换数据库    "),s("br")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 创建\n\tcreate {database|schema} [if not exists] db_name [create_specification]; \n\tdatabase 和 shema 都一样，一般使用 schema \n\t数据库已经存的话会报错中断，加上 if not exists 会有好一些 \n\tdb_name 数据库名称 \n\tcreate_specification 创建数据库的附加条件，比如说设置默认字符编码，设置默认的排序方式。设置默认字符串，就会默认设置排序方式，一般只是用来设置字符编码\n\n\tcreate database if not exits study chartset utf8;\n\tcreate schema study1;\n\tshow create database study;\n\n# 修改\nalter {database | schema} [db_name] alter_specification; // 没什么太大的意义\n\nalter database study chartset utf8mb4;\n\n> 修改数据库的名字 就是 新建一个数据库，将源数据导进去，没有直接提供修改名字的指令\n\nshow databases;   // 显示所有表名\n所有表信息都放在 information_achema\nuse  information_achema;\nshow tables;\n\n# 删除\ndrop {database | schema} [if exists] db_name;\n\ndrop database if exists study1;\n\n# 查看\nshow {database | schema} [like 'pattern' | where expr];\nuse db_name;\n\nshow database like 's%';    // 查看以 s 开头的数据库有哪些。\n\n")])])]),s("h3",{attrs:{id:"表管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表管理"}},[e._v("#")]),e._v(" 表管理")]),e._v(" "),s("ul",[s("li",[e._v("创建表 "),s("br")]),e._v(" "),s("li",[e._v("查看表 "),s("br")]),e._v(" "),s("li",[e._v("删除表 "),s("br")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 创建\ncreate [temporary] table [if not exists] tbl_name (create_definition); [table_options] [partition_options];\n// temporary\t\t创建临时表，放在内存中，mysql 关闭，自动删除临时表，释放空间\n// create_definition\t\t创建时候的一些定义\n// table_options\t\ttable 的属性\n// partition_options\t\t附加的属性\n\n例子：\ncreate table if not exits courses(\n\t// 字段： id  数值类型： int(11) unsigned: 无符号型  not null：不允许为空 auto_increment：自动增长  primary key： 主键  comment：注释\n\tid int(11) unsigned not null auto_increment primary key comment '自增id',\n\tstudent varchar(255) defalut null comment '学生',\n\tclass varchar(255) defalut null comment '科目',\n\tscore int(3) default 0 comment '成绩'\n ) engine InnDB charset utf8 comment '学生成绩表';\n // engine InnDB: 默认引擎    charset utf8  设置字符集\n\n# 快速创建表\n就是复制表的结构\ncreate table select   // 查一张表的结构把表复制\ncreate table course1 select * from courses where 1=0;    // 1=0 是为只复制表的结构而不数据数据  \n\ncreate table course2 engine InnoDB charset utf8 comment '学生成绩表' select * from courses where 1=0;    \n\nshow create table course1\\G  //复制的表 对比 手动创建的表的 mysql 语句\n复制的表会丢失 主键，自增，外部属性\n\n# 快速复制表  // 这种方式更好\ncreate table courses3 like courses;\n\n# 查看\n{explain | desc | describe } tbl_name;\nshow create table tbl_name;  // 查看创建表的语句\n\ndesc 查看结构\nshow create   查看 mysql 语句\n\n# 删除 // 可以同时删除多张表\ndrop [temporary] table [if exists] tbl_name [, tbl_name...];\n")])])]),s("ul",[s("li",[e._v("修改表")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 修改表名\nalter table tab_name rename  [to | as] new_table_name;\n\n\talter table `courses` rename `grade`;  // 修改表名 \n\n# 修改字段名\nalter table tbl_name rename column old_col_name to new_colname;\n\n\talter table  `grade` rename column `class` to `course`;  // 无法改变位置\n\n# 修改索引名\nalter table tbl_name rename {index | key} old_index_name  to new_index_name;  // 可以改变位置\n\n# 加入新字段（最后、最前、指定字段后）\nalter table tbl_name add [column] col_name col_definition [first | after col_name];\n\n\talter table `grade` add `description` text defalut null comment '备注';  // 默认插入到最后\n\talter table `grade` add `description` text defalut null comment '备注' first;  // 默认插入到最前面\n\talter table `grade` add `description` text defalut null comment '备注' after `id`;  // 默认插入到 指定位置\n\n# 删除字段\nalter table tbl_name drop [column] col_name;\n\n\t// 删除表 drop  删除数据 delete\n\talter table `grades` drop `description`;\n\n# 修改字段属性\nalter table tbl_name modify [column] col_name col_definition [first|after col_name];\n\n\talter table `grade` modify `score` int(10) after `student`; // 修改字段属性并改变位置\n\talter table `grade` modify `score` `score` int(3) after `course`; // 修改字段属性，字段名，改变位置\n\t// modify 专门修改字段属性\n\t// change  既能修改字段名，又能修改字段属性\n\nalter table tbl_name change [column] old_col_name new_col_name col_defination [first | ater col_name]\n")])])]),s("h3",{attrs:{id:"数据操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据操作"}},[e._v("#")]),e._v(" 数据操作")]),e._v(" "),s("ul",[s("li",[e._v("插入数据 "),s("br")]),e._v(" "),s("li",[e._v("修改数据 "),s("br")]),e._v(" "),s("li",[e._v("删除数据 "),s("br")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 插入\ninsert into tbl_name values(value1,value2....);\ninsert into tbl_name(col1,col2...) values(value1,value2...);\ninsert into tbl_name values(valu2,value2...),(value1,value2...)...;\ninsert into tbl_name(col1,col2,....) values(value1,value2...),(value1,value2...)...;\n\n\t// 插入一条完整数据, 可以插入多条\n\tinsert into `grades` values(1, 'A', 'Math', 90);\n\t// 插入指定字段, 可以插入多条\n\tinsert into `grades`(`student`, `course`, `score`) values('A', 'Chinese', 80);\n\tinsert into `grades`(`student`, `course`, `score`) values('A', 'Chinese', 80), ('A', 'English', 30), ('B', 'History', 90), ('B', 'Math', 90);\n\n\n# 修改\nupdate tbl_name set col1 = value1,col2 = value2... [where where_condition] [order by...] [limit row_count];\n\n\tupdate \t`grades` set `student` = '张三' where id = 12; \n\n# 删除\ndelete from tbl_name [where condition];\ntruncate tbl_name;\n\ntranuncate 原理\n\t先新建一张和之前一样的表名字一样，直接把表删除（drop table）  // drop 比 delete from 效率高\n\n\t// 删除所有数据 rm -ef\n\tdelete from `grades`;\n\t// 删除某一条数据\n\tdelete from `grades` where id=1;\n\t// 清空表\n\t// 先复制一张表\n\tcrete table grades2 select * from grades;\n\ttruncate grades2;\n")])])]),s("h3",{attrs:{id:"数据操作-查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据操作-查询"}},[e._v("#")]),e._v(" 数据操作 – 查询")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("简单查询")]),e._v(" "),s("p",[e._v("select * from tbl_name;")]),e._v(" "),s("p",[e._v("select * from grades;")]),e._v(" "),s("p",[e._v("select student, score from grades;")]),e._v(" "),s("p",[e._v("select distinct course from grades;  // distinct 去重")]),e._v(" "),s("p",[e._v("// 查找的时候做简单运算\nselect student, score - 60 as "),s("code",[e._v("jige")]),e._v(" from grades;")]),e._v(" "),s("p",[e._v("// 字符串连接\nselect concat(student, ' 同学 ', course , ' 成绩为 ', score, '分') as "),s("code",[e._v("通报")]),e._v(" from grades")])]),e._v(" "),s("li",[s("p",[e._v("条件查询")]),e._v(" "),s("p",[e._v("where")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("单条件")]),e._v(" "),s("p",[e._v("select * from grades where student='A';")])]),e._v(" "),s("li",[s("p",[e._v("多条件")]),e._v(" "),s("p",[e._v("and/or (&&/||)")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("  select * from grades where student='A' || student='B';\n")])])])]),e._v(" "),s("li",[s("p",[e._v("其它条件")]),e._v(" "),s("p",[e._v("between...and/not/is null/is not null/in/not in/like/not like")])])])]),e._v(" "),s("li",[s("p",[e._v("排序")]),e._v(" "),s("p",[e._v("order by")]),e._v(" "),s("p",[e._v("select * from grades order by "),s("code",[e._v("score")]),e._v(" desc;  // 按照成绩倒序排序\nselect * from grades order by "),s("code",[e._v("student")]),e._v(" asc， "),s("code",[e._v("score")]),e._v("\tdesc; // 按照人名正序，按照成绩倒序")])]),e._v(" "),s("li",[s("p",[e._v("限制查询数量")]),e._v(" "),s("p",[e._v("limit")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("  // 查找 索引 1 到 4 的数据   \n  select * from grades limit 1,4;   // 第一位不写 默认魏 0\n")])])])]),e._v(" "),s("li",[s("p",[e._v("统计函数")]),e._v(" "),s("p",[e._v("count/avg/sum/max/min  总数/平均/求和/最大/最小")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("  \x3c!-- count  --\x3e\n  insert into grades values(); // 插入了一条空值\n\n  select count(*) from grades; // 空值也会被计数 <br>\n  select count(student) from grades; // 空值不会被计数\n\n  select avg(score), sum(score) from grades where course='Math'; <br>\n  select max(score), min(score) from grades where course='Math';\n")])])])]),e._v(" "),s("li",[s("p",[e._v("分组查询")]),e._v(" "),s("p",[e._v("需要配合统计函数来使用，要不然没有意义")]),e._v(" "),s("p",[e._v("group by")]),e._v(" "),s("p",[e._v("select student, count(student) from grades group by student; "),s("br"),e._v("\nselect course, avg(score) from grades group by course;")])])]),e._v(" "),s("h2",{attrs:{id:"用户管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用户管理"}},[e._v("#")]),e._v(" 用户管理")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("// 查找创建命令\nhelp create user;\n")])])]),s("h3",{attrs:{id:"创建用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建用户"}},[e._v("#")]),e._v(" 创建用户")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("create user\n")])])]),s("ul",[s("li",[s("p",[e._v("第一种方式")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("create user if not exits 'aaa';\n\x3c!-- select Host, User from mysql.user where user='aaa'\\G; --\x3e\n// 查找用户相关信息\nselect * from mysql.user where user='aaa'\\G;\n")])])])]),e._v(" "),s("li",[s("p",[e._v("第二种方式  // 这种方式可能已经废弃了")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("insert into mysql.user(Host, User, authentication_string, ssl_cipher, X509_issuer,x509_subject) values('localhost', 'bbb', 'bbb', '', '', '');\n")])])]),s("blockquote",[s("p",[e._v("用这两种方式创建完之后使用 mysql -uaaa -paaa; mysql -ubbb -pbbb; 是登陆不进去的，因为密码加密的方式有问题。还需要修改密码。")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 修改密码\nalter user 'aaa'@'%' indentified with mysql_native_password by 'aaa';\nset password for 'bbb'@'%'='bbb';\n")])])]),s("blockquote",[s("p",[e._v("需要将检查密码的文件删除掉， 否则还是不能密码设置为 aaa")])]),e._v(" "),s("blockquote",[s("p",[e._v("% 匹配的是 Host 字段，需要和 select * from mysql.user where user='aaa'\\G; 查找的结果一致。")])])]),e._v(" "),s("li",[s("p",[e._v("第三种方式")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 这种方式 8.0 的版本也不支持了\ngrant all privileges on *.* to 'ccc'@'%';\n")])])])])]),e._v(" "),s("h3",{attrs:{id:"修改密码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改密码"}},[e._v("#")]),e._v(" 修改密码")]),e._v(" "),s("ul",[s("li",[e._v("第一种")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("alter user 'aaa'@'%' indentified with mysql_native_password by 'aaa';\n")])])]),s("ul",[s("li",[e._v("第二种")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("set password for 'bbb'@'%'='bbb';\n")])])]),s("h3",{attrs:{id:"删除用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除用户"}},[e._v("#")]),e._v(" 删除用户")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 刷新权限\nflush privileges;\n")])])]),s("ul",[s("li",[e._v("第一种")])]),e._v(" "),s("blockquote",[s("p",[e._v("这种方式并不好")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("delete from mysql.user where user='bbb';\n")])])]),s("ul",[s("li",[e._v("第二种")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("drop user 'bbb';\n")])])]),s("h3",{attrs:{id:"权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#权限"}},[e._v("#")]),e._v(" 权限")]),e._v(" "),s("ul",[s("li",[e._v("查看所有权限")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 查看所有权限 \nshow privileges\n")])])]),s("ul",[s("li",[e._v("把表的权限 给用户")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("   grant select on study.* to 'aaa'@'%';\n\n   show databases;\n   use study;\n   show tables;  // 查看所有表名称\n   select * from grades;\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 给所有权限\t\nhelp grant; // 查看命名\n\ngrant all on *.* to 'aaa'@'%';\n\nflush \tprivileges;\nselect * from mysql.user where user='aaa'\\G; // 除了 Grant_priv 是 N\n\nshow grants; // 查看当前用户的权限；\n\nshow grants for 'aaa'\\G;\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 赋予某个权力\ngrant \tsystem_user on *.* to 'root'@'%';\n")])])]),s("ul",[s("li",[e._v("回收权限")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("   revoke all on *.* from 'aaa'@'%';\n")])])]),s("p",[e._v("mariaDB")])])}),[],!1,null,null,null);t.default=r.exports}}]);