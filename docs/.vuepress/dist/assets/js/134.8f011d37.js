(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{677:function(t,s,a){"use strict";a.r(s);var n=a(29),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_2-如何保证代码质量和可靠性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何保证代码质量和可靠性"}},[t._v("#")]),t._v(" 2. 如何保证代码质量和可靠性")]),t._v(" "),a("h2",{attrs:{id:"单元测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单元测试"}},[t._v("#")]),t._v(" 单元测试")]),t._v(" "),a("h2",{attrs:{id:"jest-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jest-安装"}},[t._v("#")]),t._v(" jest 安装")]),t._v(" "),a("p",[t._v("npm i -D jest | yarn add -D jest")]),t._v(" "),a("p",[t._v("使用过程")]),t._v(" "),a("ul",[a("li",[t._v("创建被测试对象 math.js")]),t._v(" "),a("li",[t._v("创建test 文件 math.test.js")]),t._v(" "),a("li",[t._v("修改 package.json 文件  test: 'jest'")]),t._v(" "),a("li",[t._v("执行 npm test")])]),t._v(" "),a("h2",{attrs:{id:"代码的可靠性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码的可靠性"}},[t._v("#")]),t._v(" 代码的可靠性")]),t._v(" "),a("h3",{attrs:{id:"函数式编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程"}},[t._v("#")]),t._v(" 函数式编程")]),t._v(" "),a("p",[t._v("函数式编程是一种编程范式， 是一种构建计算机程序结构和元素的风格， 它把计算看作是对数学函数的评估，避免了状态的变化和数据的可变。")]),t._v(" "),a("p",[t._v("将我们程序分解为一些更可重用， 更可靠且更易于理解的部分， 然后再将他们组合起来，形成一个更易推理的程序整体")]),t._v(" "),a("h3",{attrs:{id:"纯函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#纯函数"}},[t._v("#")]),t._v(" 纯函数")]),t._v(" "),a("p",[t._v("如果函数的调用参数相同， 则永远返回相同的结果。它不依赖于程序执行期间函数外部任何状态或数据的变化， 必须只依赖于其输入参数。")]),t._v(" "),a("h3",{attrs:{id:"函数的副作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的副作用"}},[t._v("#")]),t._v(" 函数的副作用")]),t._v(" "),a("ul",[a("li",[t._v("当调用函数时，除了返回函数值之外， 还对主调用函数产生附加影响，例如修改全局变量 （函数外的变量）或修改参数")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 纯函数， 返回 [2,3], 原数组不改变")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非纯函数， 返回 [2,3,4], 原数组改变")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非纯函数， 返回 6 ， 原数组改变")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);