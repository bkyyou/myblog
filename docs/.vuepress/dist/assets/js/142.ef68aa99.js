(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{686:function(s,t,a){"use strict";a.r(t);var r=a(29),e=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_3-js中的隐式转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-js中的隐式转换"}},[s._v("#")]),s._v(" 3.js中的隐式转换")]),s._v(" "),a("p",[s._v("在js中，当运算符在运算时，如果两边数据不统一，CPU就无法计算，这时我们编译器会自动将运算符两边的数据做一个数据类型转换，转成一样的数据类型再计算。这种无需程序员手动转换，而由编译器自动转换的方式就称为隐式转换")]),s._v(" "),a("h2",{attrs:{id:"隐式转换规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隐式转换规则"}},[s._v("#")]),s._v(" 隐式转换规则")]),s._v(" "),a("ol",[a("li",[s._v("转成string类型： "),a("br"),s._v("\n+（字符串连接符） "),a("br")]),s._v(" "),a("li",[s._v("转成number类型："),a("br"),s._v("\n++/--(自增自减运算符) + - * / %(算术运算符) > < >= <= == != === !=== (关系运算符) "),a("br")]),s._v(" "),a("li",[s._v("转成boolean类型：!（逻辑非运算符）")])]),s._v(" "),a("h2",{attrs:{id:"字符串连接符与算术运算符隐式转换规则混淆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串连接符与算术运算符隐式转换规则混淆"}},[s._v("#")]),s._v(" 字符串连接符与算术运算符隐式转换规则混淆")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'true'")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// '1true'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NaN")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);