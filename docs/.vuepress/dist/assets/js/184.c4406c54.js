(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{737:function(v,_,e){"use strict";e.r(_);var r=e(29),t=Object(r.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"_5-redis的入门与应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-redis的入门与应用"}},[v._v("#")]),v._v(" 5.redis的入门与应用")]),v._v(" "),e("h2",{attrs:{id:"redis简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis简介"}},[v._v("#")]),v._v(" Redis简介")]),v._v(" "),e("p",[v._v("Redis是一个远程内存数据库，它不仅性能强，而且还具有复制特性以及为解决问题而生的独一无二的数据模型。 "),e("br"),v._v("\nRedis是一个速度非常快的非关系型数据库，它可以存储键和5种不同类型值的之间的映射，可以将存储在内存中的键值对数据持久化到硬盘，可以使用复制特性来扩展读性能，又可以使用客户端分片来扩展写性能。")]),v._v(" "),e("h3",{attrs:{id:"redis与其它数据库及软件对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis与其它数据库及软件对比"}},[v._v("#")]),v._v(" Redis与其它数据库及软件对比")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("名称")]),v._v(" "),e("th",[v._v("类型")]),v._v(" "),e("th",[v._v("数据存储")]),v._v(" "),e("th",[v._v("数据查询")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("Redis")]),v._v(" "),e("td",[v._v("使用内存存储的非关系型数据库")]),v._v(" "),e("td",[v._v("字符串、列表、集合、散列表、有序集合")]),v._v(" "),e("td",[v._v("每种数据类型都有自己的命令")])]),v._v(" "),e("tr",[e("td",[v._v("Memcached")]),v._v(" "),e("td",[v._v("使用内存存储的键值缓存")]),v._v(" "),e("td",[v._v("键值之间的映射")]),v._v(" "),e("td",[v._v("创建、读取、更新、删除等")])]),v._v(" "),e("tr",[e("td",[v._v("MySQL")]),v._v(" "),e("td",[v._v("关系型数据库")]),v._v(" "),e("td",[v._v("每个数据库包含多个表，每个表包含多行")]),v._v(" "),e("td",[v._v("select、insert、update、delete等")])]),v._v(" "),e("tr",[e("td",[v._v("MongoDB")]),v._v(" "),e("td",[v._v("使用硬盘存储的非关系型数据库")]),v._v(" "),e("td",[v._v("每个数据库包含多个表，每个表包含多个BSON文档")]),v._v(" "),e("td",[v._v("创建、读取、更新、删除等")])])])]),v._v(" "),e("p",[v._v("Redis 数据持久化，存储在内存中的数据写入到硬盘 "),e("br"),v._v("\n时间点转存，条件式  // 900s 之内有一条数据更新了，就会自动保存  或者 调用命令 "),e("br"),v._v("\n将所有修改数据的命令存储到一个文件中。 "),e("br")]),v._v(" "),e("h2",{attrs:{id:"redis安装及配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis安装及配置"}},[v._v("#")]),v._v(" Redis安装及配置")]),v._v(" "),e("p",[v._v("Redis 官网: https://redis.io/download "),e("br"),v._v("\nwindow 可以使用的版本 github.com/tporadowsk/releases")]),v._v(" "),e("h3",{attrs:{id:"linux-centos-7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-centos-7"}},[v._v("#")]),v._v(" Linux CentOS 7")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("下载安装包并解压")]),v._v(" "),e("ol",[e("li",[v._v("下载到 tmp 文件夹下\nwget http://download.redis.io/releases/redis-5.0.8.tar.gz")]),v._v(" "),e("li",[v._v("解压\ntar -zxvf redis-5.0.8.tar.gz")]),v._v(" "),e("li",[v._v("编译\ncd redis-5.0.8\nmake MALLOC=libc // MALLOC=libc libc是环境变量(默认的是别的分配器，这系统可能没有，需要分配器来创建 redis 程序)\ncd src/\nmake install  // 下载的文件默认放到 /usr/local/bin 目录下")])])]),v._v(" "),e("li",[e("p",[v._v("安装gcc依赖")])]),v._v(" "),e("li",[e("p",[v._v("编译配置")])]),v._v(" "),e("li",[e("p",[v._v("编译安装")])]),v._v(" "),e("li",[e("p",[v._v("启动Redis服务的几种方式")]),v._v(" "),e("ol",[e("li",[v._v("redis-server   // 按照以上方式安装，在任何目录下都能运行。\n这种方式运行，后台没有挂起来，需要新开窗口才能继续操作。")])]),v._v(" "),e("blockquote",[e("p",[v._v("没有配置环境变量的，需要 cd redis 目录下 运行 ./redis 命令")])]),v._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[v._v("redis-server /etc/redis.conf\ncd /tmp/redis-5.0.8 "),e("br"),v._v("\nvim redis.conf    "),e("br"),v._v("\n/daemon  // 查找 daemon "),e("br"),v._v("\ndaemonize no  => daemon yes   // 将 daemonize 的 no 改成 yes "),e("br"),v._v("\ncp redis.conf /etc/   // 这是临时目录，将文件 copy 到自己常用目录 "),e("br"),v._v("\nredis-server /etc/redis.conf")]),v._v(" "),e("p",[v._v("可以用 redis-cli 或者 ps -ef | grep redis 进行查看")]),v._v(" "),e("p",[v._v("redis-cli 进入 redis 的客户端")]),v._v(" "),e("blockquote",[e("p",[v._v("kill 9 2395  // 结束命令, 2395 是端口号")])])]),v._v(" "),e("li",[e("p",[v._v("配置系统服务 "),e("br"),v._v("\ncd /tmp/redis-5.0.8/utils "),e("br"),v._v("\n./install_server.sh  => 6379(默认) => /etc/redis.conf => /var/log/redis.log => enter(回车，使用默认)")]),v._v(" "),e("blockquote",[e("p",[v._v("重新启动 redis 之前，可能需要删除掉 redis_6379.pid 文件 "),e("br"),v._v("\nrm /var/run/redis_6379.pid")])]),v._v(" "),e("blockquote",[e("p",[v._v("会在 /etc/init.d 生成 redis_6379。 路径：  /etc/init.d/redis_6379")])]),v._v(" "),e("p",[v._v("在 utils 文件下 cat /run/redis_6379.pid")]),v._v(" "),e("p",[v._v("service redis_6379 start "),e("br"),v._v("\nservice redis_6378 stop "),e("br")]),v._v(" "),e("p",[v._v("vim install_server.sh\nredis_init_script  // redis 启动的过程")])])])])]),v._v(" "),e("h3",{attrs:{id:"redis常用配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis常用配置"}},[v._v("#")]),v._v(" Redis常用配置")]),v._v(" "),e("ul",[e("li",[v._v("配置文件redis.conf")])]),v._v(" "),e("ol",[e("li",[v._v("ip绑定配置    \t\tbind "),e("br"),v._v("\n如果设置了 bind ，只会对一个 ip 进行请求")]),v._v(" "),e("li",[v._v("保护模式配置\t\tprotected-mode  "),e("br"),v._v("\n远程连接的话，保护模式要关闭，还要开启密码")]),v._v(" "),e("li",[v._v("端口配置\t\t\tport")]),v._v(" "),e("li",[v._v("后台运行配置\t\tdaemonize")]),v._v(" "),e("li",[v._v("进程文件配置\t\tpidfile\n进程文件路径")]),v._v(" "),e("li",[v._v("持久化配置\t\tsave")]),v._v(" "),e("li",[v._v("连接认证配置\t\tmasterauth   "),e("br"),v._v("\n开启密码")])]),v._v(" "),e("ul",[e("li",[v._v("redis.conf 文件内容解释 "),e("br"),v._v("\n900s 内 执行一次插入语句，就保存一次  "),e("br"),v._v("\nsave 900 1 "),e("br"),v._v("\n600s 内 执行 10 次插入语句，就保存一次 "),e("br"),v._v("\nsave 300 10 "),e("br"),v._v("\n60s 内 执行 10000 次插入语句，就保存一次 "),e("br"),v._v("\nsave 60 10000 "),e("br"),v._v("\n保存位置： dir /var/lib/redis/6379")])]),v._v(" "),e("h2",{attrs:{id:"redis数据结构及应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis数据结构及应用"}},[v._v("#")]),v._v(" Redis数据结构及应用")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("结构类型")]),v._v(" "),e("th",[v._v("存储值")]),v._v(" "),e("th",[v._v("读写能力")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("STRING")]),v._v(" "),e("td",[v._v("可以是字符串、整数及浮点数")]),v._v(" "),e("td",[v._v("对整个字符串或者字符串中一部分操作；对整数和浮点数执行increment或者decrement")])]),v._v(" "),e("tr",[e("td",[v._v("LIST")]),v._v(" "),e("td",[v._v("链表，每个节点包含一个STRING")]),v._v(" "),e("td",[v._v("从链表两端push或者pop元素；根据偏移量对链表进行裁剪；读取单个或多个元素；根据值查找或移除元素")])]),v._v(" "),e("tr",[e("td",[v._v("SET")]),v._v(" "),e("td",[v._v("包含STRING的无序集合，其值具有唯一性")]),v._v(" "),e("td",[v._v("添加、获取、移除单个元素；检查一个元素是否存在于集合中；")])]),v._v(" "),e("tr",[e("td",[v._v("HASH")]),v._v(" "),e("td",[v._v("包含键值对的无序散列表")]),v._v(" "),e("td",[v._v("添加、获取、移除单个键值对；获取所有键值对；")])]),v._v(" "),e("tr",[e("td",[v._v("ZSET")]),v._v(" "),e("td",[v._v("STRING成员与浮点数分值之间的有序映射，排列顺序由分值大小决定")]),v._v(" "),e("td",[v._v("添加、获取、移除单个元素；根据分值范围或者成员获取元素")])])])]),v._v(" "),e("p",[v._v("redis-cli -h 127.0.0.1 -p 6397  // redis-cli -h 127.0.0.1 -p 6397 -a password 配置了密码才需要 -a")]),v._v(" "),e("p",[v._v("成功与否返回 1 或者 0")]),v._v(" "),e("ul",[e("li",[v._v("string\n添加数据 "),e("br"),v._v("\nset name zs  // 添加 name ： zs "),e("br"),v._v("\n读取 "),e("br"),v._v("\nget name     // 获取 name "),e("br"),v._v("\n删除 "),e("br"),v._v("\ndel name     // 删除 name "),e("br")])]),v._v(" "),e("p",[v._v("incr age  // 增加1 "),e("br"),v._v("\ndecr age by 10 // age减去十")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("list   "),e("br"),v._v("\n添加   "),e("br"),v._v("\nrpush list item   "),e("br"),v._v("\n查看    "),e("br"),v._v("\nlrange list 0 -1   // 从零到尾读取   "),e("br"),v._v("\nlindex list 1   // 从左边读取第一位   "),e("br"),v._v("\nlindex list 0   // 从左边读取第0位   "),e("br"),v._v("\nlpop list     // 删除   "),e("br")])]),v._v(" "),e("li",[e("p",[v._v("set  "),e("br"),v._v("\n添加  "),e("br"),v._v("\nsadd set itme    "),e("br"),v._v("\nsadd set itme1 item2 item3  // 添加多个  "),e("br"),v._v("\n检查  "),e("br"),v._v("\nsismember set item    "),e("br"),v._v("\n删除  "),e("br"),v._v("\nsrem set item2  "),e("br"),v._v("\n读取所有  "),e("br"),v._v("\nsmembers set   "),e("br")])]),v._v(" "),e("li",[e("p",[v._v("hash  "),e("br"),v._v("\n添加  "),e("br"),v._v("\nhset hash subkey1 value1   "),e("br"),e("br"),v._v("\nhset hash subkey2 value1    "),e("br"),v._v("\nhset hash subkey3 value3    "),e("br")])])]),v._v(" "),e("blockquote",[e("p",[v._v("sbukey1 是唯一的， value1 是不唯一的。\n删除  "),e("br"),v._v("\nhdel hash subkey4  "),e("br")])]),v._v(" "),e("ul",[e("li",[v._v("zset")])]),v._v(" "),e("blockquote",[e("p",[v._v("根据数据排位 "),e("br")])]),v._v(" "),e("p",[v._v("添加 "),e("br"),v._v("\nzadd zset 728 member1\t "),e("br"),v._v("\nzadd zset 982 member0 "),e("br"),v._v("\n查看 "),e("br"),v._v("\nzrange zset 0 -1 \t // 查看所有  打印  member1 member0 "),e("br"),v._v("\nzrange zset 0 -1 withscores\t // 查看所有  打印  member1 728 member0 982 "),e("br"),v._v("\n删除 "),e("br"),v._v("\nzrem zset member1 "),e("br")]),v._v(" "),e("p",[v._v("key *  // 读取所有数据")]),v._v(" "),e("h3",{attrs:{id:"redis在node-js中的应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis在node-js中的应用"}},[v._v("#")]),v._v(" Redis在Node.js中的应用")]),v._v(" "),e("p",[v._v("官方文档\ngithub.com/NodeRedis/node-redis")]),v._v(" "),e("ul",[e("li",[v._v("Node.js连接Redis")])]),v._v(" "),e("ol",[e("li",[e("p",[v._v("引入Redis\n打开 6379 端口 firewall-cmd --add-port=6379/tcp --permanent\n刷新  firewall-cmd --reload")]),v._v(" "),e("p",[v._v("cat /etc/redis.conf | grep log")])]),v._v(" "),e("li",[e("p",[v._v("连接Redis")])])]),v._v(" "),e("ul",[e("li",[v._v("Node.js操作Redis数据")])]),v._v(" "),e("ol",[e("li",[v._v("操作STRING数据类型；")]),v._v(" "),e("li",[v._v("操作LIST数据类型；")]),v._v(" "),e("li",[v._v("操作SET数据类型；")]),v._v(" "),e("li",[v._v("操作HASH数据类型；")])]),v._v(" "),e("p",[v._v("数据分片")]),v._v(" "),e("p",[v._v("redis 数据保存的位置\n/var/lib/redis")]),v._v(" "),e("p",[v._v("expire   // 设置数据有效期")]),v._v(" "),e("p",[v._v("《redis实战》")])])}),[],!1,null,null,null);_.default=t.exports}}]);